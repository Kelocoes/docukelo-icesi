"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9811],{8453:(e,s,i)=>{i.d(s,{R:()=>o,x:()=>l});var a=i(6540);const n={},r=a.createContext(n);function o(e){const s=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),a.createElement(r.Provider,{value:s},e.children)}},9747:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>t});const a=JSON.parse('{"id":"disenando-con-algoritmos/semana-1/advanced-topics","title":"Temas avanzados de git y github","description":"Pull Requests, Merge Conflicts, Squash, Stash y dem\xe1s.","source":"@site/docs/disenando-con-algoritmos/semana-1/advanced-topics.md","sourceDirName":"disenando-con-algoritmos/semana-1","slug":"/disenando-con-algoritmos/semana-1/advanced-topics","permalink":"/docs/disenando-con-algoritmos/semana-1/advanced-topics","draft":false,"unlisted":false,"editUrl":"https://github.com/Kelocoes/docukelo-icesi/tree/main/docs/disenando-con-algoritmos/semana-1/advanced-topics.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Git organization","permalink":"/docs/disenando-con-algoritmos/semana-1/git-organization"},"next":{"title":"Ejercicio: Colaboraci\xf3n con Git y GitHub","permalink":"/docs/disenando-con-algoritmos/semana-1/beginner-activitiy"}}');var n=i(4848),r=i(8453);const o={sidebar_position:4},l="Temas avanzados de git y github",c={},t=[{value:"Pull Requests",id:"pull-requests",level:2},{value:"C\xf3mo crear un Pull Request",id:"c\xf3mo-crear-un-pull-request",level:3},{value:"Merge conflicts",id:"merge-conflicts",level:2},{value:"C\xf3mo resolver un Merge Conflict",id:"c\xf3mo-resolver-un-merge-conflict",level:3},{value:"Rebase",id:"rebase",level:2},{value:"C\xf3mo hacer un Rebase",id:"c\xf3mo-hacer-un-rebase",level:3},{value:"Cherry-pick",id:"cherry-pick",level:2},{value:"C\xf3mo hacer un Cherry-pick",id:"c\xf3mo-hacer-un-cherry-pick",level:3},{value:"Revert",id:"revert",level:2},{value:"C\xf3mo hacer un Revert",id:"c\xf3mo-hacer-un-revert",level:3},{value:"Squash",id:"squash",level:2},{value:"C\xf3mo hacer un Squash",id:"c\xf3mo-hacer-un-squash",level:3},{value:"Stash",id:"stash",level:2},{value:"C\xf3mo usar Stash",id:"c\xf3mo-usar-stash",level:3},{value:"Forks",id:"forks",level:2},{value:"Configurar tu access token de Github",id:"configurar-tu-access-token-de-github",level:2}];function d(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"temas-avanzados-de-git-y-github",children:"Temas avanzados de git y github"})}),"\n",(0,n.jsx)(s.p,{children:"Pull Requests, Merge Conflicts, Squash, Stash y dem\xe1s."}),"\n",(0,n.jsx)(s.h2,{id:"pull-requests",children:"Pull Requests"}),"\n",(0,n.jsx)(s.p,{children:"Los Pull Requests (PR) son una forma de proponer cambios en un repositorio. Permiten a los desarrolladores revisar, discutir y aprobar cambios antes de que se integren en la rama principal."}),"\n",(0,n.jsx)(s.h3,{id:"c\xf3mo-crear-un-pull-request",children:"C\xf3mo crear un Pull Request"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsx)(s.li,{children:"Realiza cambios en una rama separada."}),"\n",(0,n.jsx)(s.li,{children:"Sube tus cambios al repositorio remoto."}),"\n",(0,n.jsx)(s.li,{children:"Ve a la p\xe1gina del repositorio en GitHub."}),"\n",(0,n.jsx)(s.li,{children:'Haz clic en el bot\xf3n "Pull Request".'}),"\n"]}),"\n",(0,n.jsx)("img",{src:"/img/pull-request.png",alt:"Pull Request",width:"1000"}),"\n",(0,n.jsxs)(s.ol,{start:"5",children:["\n",(0,n.jsx)(s.li,{children:'Selecciona la opci\xf3n "New Pull Request".'}),"\n",(0,n.jsx)(s.li,{children:"Elige la rama base y la rama de comparaci\xf3n, teniendo en cuenta la direcci\xf3n de la flecha, indicando que los cambios de la rama de comparaci\xf3n se integrar\xe1n en la rama base."}),"\n",(0,n.jsx)(s.li,{children:"Revisa los cambios y agrega un t\xedtulo y una descripci\xf3n para el Pull Request."}),"\n",(0,n.jsx)(s.li,{children:'Haz clic en "Create Pull Request".'}),"\n",(0,n.jsx)(s.li,{children:"Una vez creado, puedes asignar revisores, etiquetas y proyectos al Pull Request."}),"\n"]}),"\n",(0,n.jsx)("img",{src:"/img/pull-request-2.png",alt:"Pull Request 2",width:"1000"}),"\n",(0,n.jsxs)(s.ol,{start:"10",children:["\n",(0,n.jsx)(s.li,{children:"Los revisores pueden comentar, solicitar cambios o aprobar el Pull Request."}),"\n"]}),"\n",(0,n.jsx)("img",{src:"/img/pull-request-3.png",alt:"Pull Request 3",width:"1000"}),"\n",(0,n.jsxs)(s.ol,{start:"11",children:["\n",(0,n.jsx)(s.li,{children:'Una vez aprobado, puedes hacer clic en "Merge Pull Request" para integrar los cambios en la rama base.'}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"merge-conflicts",children:"Merge conflicts"}),"\n",(0,n.jsx)(s.p,{children:"Los merge conflicts ocurren cuando dos ramas tienen cambios incompatibles en las mismas l\xedneas de un archivo. Git no puede resolver autom\xe1ticamente estos conflictos y requiere intervenci\xf3n manual."}),"\n",(0,n.jsx)("img",{src:"/img/merge-conflict.png",alt:"Merge Conflict",width:"700"}),"\n",(0,n.jsx)(s.h3,{id:"c\xf3mo-resolver-un-merge-conflict",children:"C\xf3mo resolver un Merge Conflict"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsx)(s.li,{children:"Identifica los archivos en conflicto. Git te lo indicar\xe1 al intentar hacer un merge."}),"\n",(0,n.jsx)(s.li,{children:"Abre los archivos en conflicto en tu editor de texto."}),"\n",(0,n.jsxs)(s.li,{children:["Busca las secciones marcadas por Git, que indican los cambios en conflicto. Estas secciones estar\xe1n rodeadas por ",(0,n.jsx)(s.code,{children:"<<<<<<<"}),", ",(0,n.jsx)(s.code,{children:"======="})," y ",(0,n.jsx)(s.code,{children:">>>>>>>"}),"."]}),"\n",(0,n.jsx)(s.li,{children:"Revisa los cambios y decide c\xf3mo resolver el conflicto. Puedes elegir uno de los cambios, combinarlos o modificarlos."}),"\n",(0,n.jsxs)(s.li,{children:["Elimina las marcas de conflicto (",(0,n.jsx)(s.code,{children:"<<<<<<<"}),", ",(0,n.jsx)(s.code,{children:"======="}),", ",(0,n.jsx)(s.code,{children:">>>>>>>"}),") y guarda el archivo."]}),"\n",(0,n.jsxs)(s.li,{children:["Una vez resuelto el conflicto, a\xf1ade el archivo a la etapa de cambios con ",(0,n.jsx)(s.code,{children:"git add <archivo>"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Completa el merge con ",(0,n.jsx)(s.code,{children:"git commit"}),". Git abrir\xe1 un editor para que puedas escribir un mensaje de commit, o puedes usar ",(0,n.jsx)(s.code,{children:'git commit -m "Mensaje del commit"'})," para hacerlo directamente."]}),"\n",(0,n.jsx)(s.li,{children:"Si est\xe1s trabajando en un Pull Request, GitHub actualizar\xe1 autom\xe1ticamente el Pull Request con los cambios resueltos."}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"rebase",children:"Rebase"}),"\n",(0,n.jsx)(s.p,{children:"El rebase es una t\xe9cnica que permite integrar cambios de una rama a otra de manera lineal, reescribiendo el historial de commits. Es \xfatil para mantener un historial limpio y evitar merges innecesarios."}),"\n",(0,n.jsx)(s.h3,{id:"c\xf3mo-hacer-un-rebase",children:"C\xf3mo hacer un Rebase"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsx)(s.li,{children:"Aseg\xfarate de estar en la rama que deseas rebasear."}),"\n",(0,n.jsxs)(s.li,{children:["Ejecuta el comando ",(0,n.jsx)(s.code,{children:"git fetch"})," para obtener los \xfaltimos cambios del repositorio remoto."]}),"\n",(0,n.jsxs)(s.li,{children:["Ejecuta ",(0,n.jsx)(s.code,{children:"git rebase <rama-base>"})," para aplicar los cambios de la rama base a tu rama actual."]}),"\n",(0,n.jsx)(s.li,{children:"Si hay conflictos, Git te lo indicar\xe1. Resu\xe9lvelos como se explic\xf3 anteriormente."}),"\n",(0,n.jsxs)(s.li,{children:["Una vez resueltos los conflictos, usa ",(0,n.jsx)(s.code,{children:"git rebase --continue"})," para continuar con el proceso de rebase."]}),"\n",(0,n.jsxs)(s.li,{children:["Si deseas abortar el rebase en cualquier momento, puedes usar ",(0,n.jsx)(s.code,{children:"git rebase --abort"}),"."]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"cherry-pick",children:"Cherry-pick"}),"\n",(0,n.jsx)(s.p,{children:"El cherry-pick es una t\xe9cnica que permite aplicar un commit espec\xedfico de una rama a otra. Es \xfatil cuando deseas llevar un cambio espec\xedfico sin hacer un merge completo de la rama."}),"\n",(0,n.jsx)(s.h3,{id:"c\xf3mo-hacer-un-cherry-pick",children:"C\xf3mo hacer un Cherry-pick"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:["Identifica el hash del commit que deseas cherry-pickear. Puedes encontrarlo con ",(0,n.jsx)(s.code,{children:"git log"}),"."]}),"\n",(0,n.jsx)(s.li,{children:"Aseg\xfarate de estar en la rama donde deseas aplicar el commit."}),"\n",(0,n.jsxs)(s.li,{children:["Ejecuta el comando ",(0,n.jsx)(s.code,{children:"git cherry-pick <hash-del-commit>"}),"."]}),"\n",(0,n.jsx)(s.li,{children:"Si hay conflictos, resu\xe9lvelos como se explic\xf3 anteriormente."}),"\n",(0,n.jsxs)(s.li,{children:["Una vez resueltos los conflictos, usa ",(0,n.jsx)(s.code,{children:"git cherry-pick --continue"})," para completar el cherry-pick."]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"revert",children:"Revert"}),"\n",(0,n.jsx)(s.p,{children:"El revert es una t\xe9cnica que permite deshacer un commit espec\xedfico creando un nuevo commit que invierte los cambios del commit original. Es \xfatil para deshacer cambios sin alterar el historial de commits."}),"\n",(0,n.jsx)(s.h3,{id:"c\xf3mo-hacer-un-revert",children:"C\xf3mo hacer un Revert"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:["Identifica el hash del commit que deseas revertir. Puedes encontrarlo con ",(0,n.jsx)(s.code,{children:"git log"}),"."]}),"\n",(0,n.jsx)(s.li,{children:"Aseg\xfarate de estar en la rama donde deseas aplicar el revert."}),"\n",(0,n.jsxs)(s.li,{children:["Ejecuta el comando ",(0,n.jsx)(s.code,{children:"git revert <hash-del-commit>"}),"."]}),"\n",(0,n.jsx)(s.li,{children:"Git crear\xe1 un nuevo commit que invierte los cambios del commit original."}),"\n",(0,n.jsx)(s.li,{children:"Si hay conflictos, resu\xe9lvelos como se explic\xf3 anteriormente."}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"squash",children:"Squash"}),"\n",(0,n.jsx)(s.p,{children:"El squash es una t\xe9cnica que permite combinar varios commits en uno solo. Es \xfatil para limpiar el historial de commits antes de hacer un merge o un Pull Request."}),"\n",(0,n.jsx)(s.h3,{id:"c\xf3mo-hacer-un-squash",children:"C\xf3mo hacer un Squash"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsx)(s.li,{children:"Aseg\xfarate de estar en la rama que deseas squashar xd."}),"\n",(0,n.jsxs)(s.li,{children:["Ejecuta el comando ",(0,n.jsx)(s.code,{children:"git rebase -i HEAD~<n\xfamero-de-commits>"}),", donde ",(0,n.jsx)(s.code,{children:"<n\xfamero-de-commits>"})," es el n\xfamero de commits que deseas combinar."]}),"\n",(0,n.jsxs)(s.li,{children:["En el editor que se abre, cambia ",(0,n.jsx)(s.code,{children:"pick"})," a ",(0,n.jsx)(s.code,{children:"squash"})," (o ",(0,n.jsx)(s.code,{children:"s"}),") para los commits que deseas combinar con el commit anterior."]}),"\n",(0,n.jsx)(s.li,{children:"Guarda y cierra el editor."}),"\n",(0,n.jsx)(s.li,{children:"Git te pedir\xe1 que escribas un nuevo mensaje de commit para el commit combinado. Edita el mensaje seg\xfan sea necesario."}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"stash",children:"Stash"}),"\n",(0,n.jsx)(s.p,{children:"Stash es uno de los m\xe9todos m\xe1s \xfatiles de Git para guardar temporalmente los cambios no confirmados en tu directorio de trabajo. Es especialmente \xfatil cuando necesitas cambiar de rama sin hacer un commit de tus cambios actuales."}),"\n",(0,n.jsx)(s.h3,{id:"c\xf3mo-usar-stash",children:"C\xf3mo usar Stash"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:["Para guardar tus cambios actuales, usa el comando ",(0,n.jsx)(s.code,{children:"git stash"}),". Esto guardar\xe1 tus cambios y limpiar\xe1 tu directorio de trabajo."]}),"\n",(0,n.jsxs)(s.li,{children:["Si deseas guardar tus cambios con un mensaje descriptivo, puedes usar ",(0,n.jsx)(s.code,{children:'git stash save "Mensaje descriptivo"'}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Para ver una lista de tus stashes guardados, usa ",(0,n.jsx)(s.code,{children:"git stash list"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Para aplicar el stash m\xe1s reciente, usa ",(0,n.jsx)(s.code,{children:"git stash apply"}),". Si deseas aplicar un stash espec\xedfico, usa ",(0,n.jsx)(s.code,{children:"git stash apply stash@{n}"}),", donde ",(0,n.jsx)(s.code,{children:"n"})," es el \xedndice del stash en la lista."]}),"\n",(0,n.jsxs)(s.li,{children:["Si deseas eliminar el stash despu\xe9s de aplicarlo, puedes usar ",(0,n.jsx)(s.code,{children:"git stash pop"}),", que aplica el stash y lo elimina de la lista."]}),"\n",(0,n.jsxs)(s.li,{children:["Si deseas eliminar un stash espec\xedfico, usa ",(0,n.jsx)(s.code,{children:"git stash drop stash@{n}"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Si deseas eliminar todos los stashes, usa ",(0,n.jsx)(s.code,{children:"git stash clear"}),"."]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"forks",children:"Forks"}),"\n",(0,n.jsx)(s.p,{children:"Un fork es una copia de un repositorio que te permite hacer cambios sin afectar el repositorio original. Es \xfatil para contribuir a proyectos de c\xf3digo abierto o para experimentar con cambios sin comprometer el repositorio original."}),"\n",(0,n.jsx)("img",{src:"/img/fork.png",alt:"Fork",width:"1000"}),"\n",(0,n.jsx)(s.h2,{id:"configurar-tu-access-token-de-github",children:"Configurar tu access token de Github"}),"\n",(0,n.jsx)(s.p,{children:"Para configurar tu access token de desarrollo en Github, sigue estos pasos:"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsxs)(s.li,{children:["En la esquina superior derecha de cualquier p\xe1gina de GitHub, haz clic en tu foto de perfil y luego en ",(0,n.jsx)(s.strong,{children:"Settings"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["En el men\xfa de la izquierda, haz clic en ",(0,n.jsx)(s.strong,{children:"Developer Settings"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Haz clic en ",(0,n.jsx)(s.strong,{children:"Personal access tokens"})," y luego en ",(0,n.jsx)(s.strong,{children:"Tokens (classic)"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Haz clic en ",(0,n.jsx)(s.strong,{children:"Generate new token"}),"."]}),"\n",(0,n.jsx)(s.li,{children:"Asigna un nombre descriptivo al token y selecciona las casillas de verificaci\xf3n para los permisos que deseas otorgar (Puedes seleccionar todos)."}),"\n",(0,n.jsxs)(s.li,{children:["Haz clic en ",(0,n.jsx)(s.strong,{children:"Generate token"}),"."]}),"\n",(0,n.jsx)(s.li,{children:"Copia el token generado y gu\xe1rdalo en un lugar seguro, ya que no podr\xe1s verlo nuevamente."}),"\n",(0,n.jsx)(s.li,{children:"Para usar el token en la l\xednea de comandos, puedes configurarlo como tu contrase\xf1a al hacer push o pull desde el repositorio. Cuando Git te pida tu nombre de usuario y contrase\xf1a, usa tu nombre de usuario de GitHub y el token como contrase\xf1a."}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);
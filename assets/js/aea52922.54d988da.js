"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7524],{6077:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"disenando-con-algoritmos/semana-4/web-storage-exercises","title":"Ejercicios de Web Storage en JavaScript","description":"Este documento te ayudar\xe1 a practicar Web Storage en JavaScript con ejercicios progresivos.","source":"@site/docs/disenando-con-algoritmos/semana-4/web-storage-exercises.md","sourceDirName":"disenando-con-algoritmos/semana-4","slug":"/disenando-con-algoritmos/semana-4/web-storage-exercises","permalink":"/docs/disenando-con-algoritmos/semana-4/web-storage-exercises","draft":false,"unlisted":false,"editUrl":"https://github.com/Kelocoes/docukelo-icesi/tree/main/docs/disenando-con-algoritmos/semana-4/web-storage-exercises.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Ejercicios de DOM y Eventos en JavaScript","permalink":"/docs/disenando-con-algoritmos/semana-4/dom-exercises"},"next":{"title":"Introducci\xf3n a Node.js y NPM","permalink":"/docs/disenando-con-algoritmos/semana-4/node"}}');var t=a(4848),o=a(8453);const s={sidebar_position:3},i="Ejercicios de Web Storage en JavaScript",l={},c=[{value:"Conceptos importantes",id:"conceptos-importantes",level:2},{value:"1. Preferencias de tema (claro/oscuro)",id:"1-preferencias-de-tema-clarooscuro",level:2},{value:"2. Formulario que cree cards de presentaci\xf3n",id:"2-formulario-que-cree-cards-de-presentaci\xf3n",level:2},{value:"3. Calificar pel\xedculas",id:"3-calificar-pel\xedculas",level:2},{value:"4. Carrito de compras",id:"4-carrito-de-compras",level:2},{value:"5. Register y Login",id:"5-register-y-login",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{Details:a}=n;return a||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"ejercicios-de-web-storage-en-javascript",children:"Ejercicios de Web Storage en JavaScript"})}),"\n",(0,t.jsxs)(n.p,{children:["Este documento te ayudar\xe1 a practicar ",(0,t.jsx)(n.strong,{children:"Web Storage"})," en JavaScript con ejercicios progresivos.",(0,t.jsx)(n.br,{}),"\n","La idea es que tengas una ",(0,t.jsx)(n.strong,{children:"consigna clara"})," y una ",(0,t.jsx)(n.strong,{children:"base de c\xf3digo lista para copiar y pegar"}),", as\xed no empiezas desde cero."]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Nota"}),": Para repasar los conceptos te\xf3ricos de Web Storage, consulta la ",(0,t.jsx)(n.a,{href:"https://docukelo-icesi.onrender.com/docs/disenando-con-algoritmos/semana-4/dom#3-web-storage",children:"explicaci\xf3n del profesor"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"conceptos-importantes",children:"Conceptos importantes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"JSON.stringify()"}),": Convierte objetos/arreglos a texto para poder guardarlos"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"JSON.parse()"}),": Convierte el texto guardado de vuelta a objetos/arreglos"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["Operador ",(0,t.jsx)(n.code,{children:"||"})]}),": Proporciona un valor por defecto si el dato no existe"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"setItem(clave, valor)"}),": Guardar datos"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"getItem(clave)"}),": Recuperar datos"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"removeItem(clave)"}),": Eliminar datos espec\xedficos"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"clear()"}),": Borrar todo el almacenamiento"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"push()"}),": Agregar elementos al final de un arreglo"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"splice(\xedndice, cantidad)"}),": Eliminar elementos por posici\xf3n del arreglo"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"length"}),": Verificar si el arreglo tiene elementos"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h1,{id:"ejercicios",children:"Ejercicios"}),"\n",(0,t.jsx)(n.h2,{id:"1-preferencias-de-tema-clarooscuro",children:"1. Preferencias de tema (claro/oscuro)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Consigna:"}),(0,t.jsx)(n.br,{}),"\n","Crea un bot\xf3n que permita alternar entre modo claro y modo oscuro. La preferencia debe guardarse en ",(0,t.jsx)(n.code,{children:"localStorage"})," para que al recargar la p\xe1gina se mantenga."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Extra"}),": Puedes cambiar los estilos del bot\xf3n para que contrasten con el fondo._"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="es">\n  <head>\n    <meta charset="UTF-8" />\n    <title>Preferencias de Tema</title>\n    <style>\n      body.dark {\n        background-color: #222;\n        color: white;\n      }\n      body.light {\n        background-color: white;\n        color: black;\n      }\n    </style>\n  </head>\n  <body class="light">\n    <button id="btnTema">Cambiar tema</button>\n\n    <script>\n      // Paso 1: Selecciona el bot\xf3n y el body\n      // Paso 2: Agrega un listener para cambiar entre clases "dark" y "light"\n      // Paso 3: Guarda la preferencia en localStorage\n      // Paso 4: Al cargar la p\xe1gina, aplica el tema guardado\n    <\/script>\n  </body>\n</html>\n'})}),"\n",(0,t.jsxs)(a,{children:[(0,t.jsx)("summary",{children:"\ud83d\udca1 Posible soluci\xf3n >:) "}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"<!DOCTYPE html>\n<html lang=\"es\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Preferencias de Tema</title>\n    <style>\n      body.dark {\n        background-color: #222;\n        color: white;\n      }\n      body.light {\n        background-color: white;\n        color: black;\n      }\n      button {\n        padding: 10px 15px;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        margin: 10px;\n      }\n      .dark button {\n        background-color: #444;\n        color: white;\n      }\n      .light button {\n        background-color: #eee;\n        color: black;\n      }\n    </style>\n  </head>\n  <body class=\"light\">\n    <button id=\"btnTema\">Cambiar a modo oscuro</button>\n\n    <script>\n      // Paso 1: Selecciona el bot\xf3n y el body\n      const btnTema = document.getElementById('btnTema');\n      const body = document.body;\n\n      // Paso 4: Al cargar la p\xe1gina, aplica el tema guardado\n      const temaGuardado = localStorage.getItem('tema');\n      if (temaGuardado) {\n        body.className = temaGuardado;\n        actualizarTextoBoton();\n      }\n\n      // Paso 2: Agrega un listener para cambiar entre clases \"dark\" y \"light\"\n      btnTema.addEventListener('click', () => {\n        if (body.classList.contains('light')) {\n          body.classList.replace('light', 'dark');\n          localStorage.setItem('tema', 'dark');\n        } else {\n          body.classList.replace('dark', 'light');\n          localStorage.setItem('tema', 'light');\n        }\n        actualizarTextoBoton();\n      });\n\n      // Funci\xf3n auxiliar para actualizar el texto del bot\xf3n\n      function actualizarTextoBoton() {\n        btnTema.textContent = body.classList.contains('light')\n          ? 'Cambiar a modo oscuro'\n          : 'Cambiar a modo claro';\n      }\n    <\/script>\n  </body>\n</html>\n"})})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"2-formulario-que-cree-cards-de-presentaci\xf3n",children:"2. Formulario que cree cards de presentaci\xf3n"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Consigna:"}),(0,t.jsx)(n.br,{}),"\n","Haz un formulario que pida nombre, profesi\xf3n y descripci\xf3n. Cada vez que el usuario lo env\xede, se debe crear una card con esos datos. Guarda las cards en ",(0,t.jsx)(n.code,{children:"localStorage"})," para que al recargar la p\xe1gina se mantengan."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Extra: A\xf1adir un bot\xf3n que pueda eliminar cards"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="es">\n  <head>\n    <meta charset="UTF-8" />\n    <title>Cards de Presentaci\xf3n</title>\n  </head>\n  <body>\n    <form id="formCard">\n      <input type="text" id="nombre" placeholder="Nombre" />\n      <input type="text" id="profesion" placeholder="Profesi\xf3n" />\n      <textarea id="descripcion" placeholder="Descripci\xf3n"></textarea>\n      <button type="submit">Crear Card</button>\n    </form>\n\n    <div id="cards"></div>\n\n    <script>\n      // Paso 1: Captura el formulario y los campos\n      // Paso 2: Al enviar, crea un objeto con los datos\n      // Paso 3: Agrega ese objeto a un array y gu\xe1rdalo en localStorage\n      // Paso 4: Pinta todas las cards en el div, cargando tambi\xe9n desde localStorage\n    <\/script>\n  </body>\n</html>\n'})}),"\n",(0,t.jsxs)(a,{children:[(0,t.jsx)("summary",{children:"\ud83d\udca1 Posible soluci\xf3n >:) "}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'<!DOCTYPE html>\n<html lang="es">\n  <head>\n    <meta charset="UTF-8" />\n    <title>Cards de Presentaci\xf3n</title>\n    <style>\n      .card {\n        border: 1px solid #ccc;\n        border-radius: 8px;\n        padding: 15px;\n        margin: 10px 0;\n        box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n      }\n      input, textarea {\n        display: block;\n        margin: 10px 0;\n        padding: 8px;\n        width: 300px;\n      }\n      button {\n        padding: 10px 15px;\n        background-color: #4CAF50;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n      }\n    </style>\n  </head>\n  <body>\n    <form id="formCard">\n      <input type="text" id="nombre" placeholder="Nombre" required>\n      <input type="text" id="profesion" placeholder="Profesi\xf3n" required>\n      <textarea id="descripcion" placeholder="Descripci\xf3n" required></textarea>\n      <button type="submit">Crear Card</button>\n    </form>\n\n    <div id="cards"></div>\n\n    <script>\n      // Paso 1: Captura el formulario y los campos\n      const form = document.getElementById(\'formCard\');\n      const nombreInput = document.getElementById(\'nombre\');\n      const profesionInput = document.getElementById(\'profesion\');\n      const descripcionInput = document.getElementById(\'descripcion\');\n      const cardsContainer = document.getElementById(\'cards\');\n\n      // Array para almacenar las cards\n      let cards = JSON.parse(localStorage.getItem(\'cards\')) || [];\n\n      // Paso 4: Pinta todas las cards en el div, cargando tambi\xe9n desde localStorage\n      function renderCards() {\n        cardsContainer.innerHTML = \'\';\n        cards.forEach((card, index) => {\n          const cardElement = document.createElement(\'div\');\n          cardElement.className = \'card\';\n          cardElement.innerHTML = `\n            <h3>${card.nombre}</h3>\n            <p><strong>Profesi\xf3n:</strong> ${card.profesion}</p>\n            <p>${card.descripcion}</p>\n            <button onclick="eliminarCard(${index})">Eliminar</button>\n          `;\n          cardsContainer.appendChild(cardElement);\n        });\n      }\n\n      // Funci\xf3n para eliminar una card\n      window.eliminarCard = function(index) {\n        cards.splice(index, 1);\n        localStorage.setItem(\'cards\', JSON.stringify(cards));\n        renderCards();\n      };\n\n      // Paso 2: Al enviar, crea un objeto con los datos\n      form.addEventListener(\'submit\', (e) => {\n        e.preventDefault();\n\n        const nuevaCard = {\n          nombre: nombreInput.value,\n          profesion: profesionInput.value,\n          descripcion: descripcionInput.value\n        };\n\n        // Paso 3: Agrega ese objeto a un array y gu\xe1rdalo en localStorage\n        cards.push(nuevaCard);\n        localStorage.setItem(\'cards\', JSON.stringify(cards));\n\n        // Limpiar formulario y renderizar cards\n        form.reset();\n        renderCards();\n      });\n\n      // Renderizar cards al cargar la p\xe1gina\n      renderCards();\n    <\/script>\n  </body>\n</html>\n'})})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"3-calificar-pel\xedculas",children:"3. Calificar pel\xedculas"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Consigna:"}),(0,t.jsx)(n.br,{}),"\n","Muestra una lista de pel\xedculas. Cada una debe tener estrellas para votar (del 1 al 5). El voto del usuario debe guardarse en ",(0,t.jsx)(n.code,{children:"localStorage"})," para que al recargar la p\xe1gina las calificaciones sigan visibles."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.em,{children:["Pista: En este ejercicio puedes usar este caracter ",(0,t.jsx)(n.code,{children:"\u2605"}),", pues, solo le cambiaras el color a la estrella."]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="es">\n  <head>\n    <meta charset="UTF-8" />\n    <title>Calificar Pel\xedculas</title>\n  </head>\n  <body>\n    <ul id="peliculas">\n      <li data-id="1">Inception \u2605\u2605\u2605\u2605\u2605</li>\n      <li data-id="2">Interstellar \u2605\u2605\u2605\u2605\u2605</li>\n      <li data-id="3">Tenet \u2605\u2605\u2605\u2605\u2605</li>\n    </ul>\n\n    <script>\n      // Paso 1: Selecciona la lista de pel\xedculas\n      // Paso 2: Detecta clicks en las estrellas y guarda la calificaci\xf3n en localStorage\n      // Paso 3: Al cargar, muestra las calificaciones guardadas\n    <\/script>\n  </body>\n</html>\n'})}),"\n",(0,t.jsxs)(a,{children:[(0,t.jsx)("summary",{children:"\ud83d\udca1 Posible soluci\xf3n >:) "}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"<!DOCTYPE html>\n<html lang=\"es\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Calificar Pel\xedculas</title>\n    <style>\n      .pelicula {\n        margin: 15px 0;\n        font-size: 18px;\n      }\n      .estrella {\n        cursor: pointer;\n        color: #ccc;\n        font-size: 24px;\n      }\n      .estrella.seleccionada {\n        color: gold;\n      }\n    </style>\n  </head>\n  <body>\n    <h2>Califica estas pel\xedculas:</h2>\n    <ul id=\"peliculas\">\n      <li class=\"pelicula\" data-id=\"1\">Inception <span class=\"estrellas\" data-id=\"1\"></span></li>\n      <li class=\"pelicula\" data-id=\"2\">Interstellar <span class=\"estrellas\" data-id=\"2\"></span></li>\n      <li class=\"pelicula\" data-id=\"3\">Tenet <span class=\"estrellas\" data-id=\"3\"></span></li>\n    </ul>\n\n    <script>\n      // Paso 1: Selecciona la lista de pel\xedculas\n      const contenedoresEstrellas = document.querySelectorAll('.estrellas');\n\n      // Paso 3: Al cargar, muestra las calificaciones guardadas\n      document.addEventListener('DOMContentLoaded', () => {\n        contenedoresEstrellas.forEach(contenedor => {\n          const idPelicula = contenedor.getAttribute('data-id');\n          const calificacion = localStorage.getItem(`pelicula-${idPelicula}`) || 0;\n\n          // Crear estrellas\n          for (let i = 1; i <= 5; i++) {\n            const estrella = document.createElement('span');\n            estrella.className = 'estrella';\n            estrella.textContent = '\u2605';\n            estrella.setAttribute('data-value', i);\n            estrella.setAttribute('data-pelicula', idPelicula);\n\n            if (i <= calificacion) {\n              estrella.classList.add('seleccionada');\n            }\n\n            contenedor.appendChild(estrella);\n          }\n        });\n      });\n\n      // Paso 2: Detecta clicks en las estrellas y guarda la calificaci\xf3n en localStorage\n      document.addEventListener('click', (e) => {\n        if (e.target.classList.contains('estrella')) {\n          const valor = e.target.getAttribute('data-value');\n          const idPelicula = e.target.getAttribute('data-pelicula');\n\n          // Guardar calificaci\xf3n\n          localStorage.setItem(`pelicula-${idPelicula}`, valor);\n\n          // Actualizar visualizaci\xf3n de estrellas\n          const estrellas = document.querySelectorAll(`.estrella[data-pelicula=\"${idPelicula}\"]`);\n          estrellas.forEach(estrella => {\n            const valorEstrella = estrella.getAttribute('data-value');\n            if (valorEstrella <= valor) {\n              estrella.classList.add('seleccionada');\n            } else {\n              estrella.classList.remove('seleccionada');\n            }\n          });\n        }\n      });\n    <\/script>\n  </body>\n</html>\n"})})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"4-carrito-de-compras",children:"4. Carrito de compras"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Consigna:"}),(0,t.jsx)(n.br,{}),"\n","Crea un sistema de carrito donde se puedan agregar productos, mostrarlos en una lista con su precio, calcular el total y eliminarlos. Toda la informaci\xf3n debe guardarse en ",(0,t.jsx)(n.code,{children:"localStorage"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="es">\n  <head>\n    <meta charset="UTF-8" />\n    <title>Carrito de Compras</title>\n  </head>\n  <body>\n    <button data-id="1" data-nombre="Producto A" data-precio="10">\n      Agregar Producto A\n    </button>\n    <button data-id="2" data-nombre="Producto B" data-precio="15">\n      Agregar Producto B\n    </button>\n\n    <h3>Carrito</h3>\n    <ul id="carrito"></ul>\n    <p>Total: <span id="total">0</span></p>\n\n    <script>\n      // Paso 1: Selecciona los botones y el ul del carrito\n      // Paso 2: Al hacer click en un bot\xf3n, agrega el producto a un array y gu\xe1rdalo en localStorage\n      // Paso 3: Pinta los productos en el carrito con opci\xf3n de eliminar\n      // Paso 4: Calcula y muestra el total\n    <\/script>\n  </body>\n</html>\n'})}),"\n",(0,t.jsxs)(a,{children:[(0,t.jsx)("summary",{children:"\ud83d\udca1 Posible soluci\xf3n >:) "}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"<!DOCTYPE html>\n<html lang=\"es\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Carrito de Compras</title>\n    <style>\n      button {\n        padding: 10px 15px;\n        margin: 5px;\n        cursor: pointer;\n      }\n      .producto-carrito {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        border-bottom: 1px solid #eee;\n        padding: 8px 0;\n      }\n      .eliminar {\n        background-color: #ff4444;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        padding: 5px 10px;\n        cursor: pointer;\n      }\n    </style>\n  </head>\n  <body>\n    <h2>Productos disponibles:</h2>\n    <button data-id=\"1\" data-nombre=\"Producto A\" data-precio=\"10\">\n      Agregar Producto A ($10)\n    </button>\n    <button data-id=\"2\" data-nombre=\"Producto B\" data-precio=\"15\">\n      Agregar Producto B ($15)\n    </button>\n\n    <h3>Carrito</h3>\n    <ul id=\"carrito\"></ul>\n    <p>Total: $<span id=\"total\">0</span></p>\n\n    <script>\n      // Paso 1: Selecciona los botones y el ul del carrito\n      const botonesAgregar = document.querySelectorAll('button[data-id]');\n      const carritoLista = document.getElementById('carrito');\n      const totalElemento = document.getElementById('total');\n\n      // Cargar carrito desde localStorage\n      let carrito = JSON.parse(localStorage.getItem('carrito')) || [];\n\n      // Paso 4: Calcula y muestra el total\n      function actualizarTotal() {\n        const total = carrito.reduce((sum, producto) => sum + producto.precio, 0);\n        totalElemento.textContent = total;\n      }\n\n      // Paso 3: Pinta los productos en el carrito con opci\xf3n de eliminar\n      function renderCarrito() {\n        carritoLista.innerHTML = '';\n        carrito.forEach((producto, index) => {\n          const li = document.createElement('li');\n          li.className = 'producto-carrito';\n          li.innerHTML = `\n            ${producto.nombre} - $${producto.precio}\n            <button class=\"eliminar\" data-id=\"${producto.id}\">Eliminar</button>\n          `;\n          carritoLista.appendChild(li);\n        });\n\n        // Agregar event listeners a los botones de eliminar\n        document.querySelectorAll('.eliminar').forEach(btn => {\n          btn.addEventListener('click', (e) => {\n            const index = e.target.getAttribute('data-id');\n            carrito.splice(index, 1);\n            localStorage.setItem('carrito', JSON.stringify(carrito));\n            renderCarrito();\n            actualizarTotal();\n          });\n        });\n\n        actualizarTotal();\n      }\n\n      // Paso 2: Al hacer click en un bot\xf3n, agrega el producto a un array y gu\xe1rdalo en localStorage\n      botonesAgregar.forEach(boton => {\n        boton.addEventListener('click', () => {\n          const producto = {\n            id: boton.getAttribute('data-id'),\n            nombre: boton.getAttribute('data-nombre'),\n            precio: parseInt(boton.getAttribute('data-precio'))\n          };\n\n          carrito.push(producto);\n          localStorage.setItem('carrito', JSON.stringify(carrito));\n          renderCarrito();\n        });\n      });\n\n      // Renderizar carrito al cargar la p\xe1gina\n      renderCarrito();\n    <\/script>\n  </body>\n</html>\n"})})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"5-register-y-login",children:"5. Register y Login"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Consigna:"}),(0,t.jsx)(n.br,{}),"\n","Crea un sistema simple de registro y login usando ",(0,t.jsx)(n.code,{children:"localStorage"}),". El usuario debe poder registrarse con nombre y contrase\xf1a. Luego, al iniciar sesi\xf3n, el sistema debe validar los datos y mostrar un mensaje de bienvenida."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="es">\n  <head>\n    <meta charset="UTF-8" />\n    <title>Register y Login</title>\n  </head>\n  <body>\n    <h3>Registro</h3>\n    <form id="formRegistro">\n      <input type="text" id="regUsuario" placeholder="Usuario" />\n      <input type="password" id="regPass" placeholder="Contrase\xf1a" />\n      <button type="submit">Registrar</button>\n    </form>\n\n    <h3>Login</h3>\n    <form id="formLogin">\n      <input type="text" id="loginUsuario" placeholder="Usuario" />\n      <input type="password" id="loginPass" placeholder="Contrase\xf1a" />\n      <button type="submit">Login</button>\n    </form>\n\n    <div id="mensaje"></div>\n\n    <script>\n      // Paso 1: Captura los formularios\n      // Paso 2: En registro, guarda usuario y contrase\xf1a en localStorage\n      // Paso 3: En login, valida contra los datos guardados\n      // Paso 4: Si es correcto, muestra un mensaje de bienvenida\n    <\/script>\n  </body>\n</html>\n'})}),"\n",(0,t.jsxs)(a,{children:[(0,t.jsx)("summary",{children:"\ud83d\udca1 Posible soluci\xf3n >:) "}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'<!DOCTYPE html>\n<html lang="es">\n  <head>\n    <meta charset="UTF-8" />\n    <title>Register y Login</title>\n  </head>\n  <body>\n    <h3>Registro</h3>\n    <form id="formRegistro">\n      <input type="text" id="regUsuario" placeholder="Usuario" required />\n      <input type="password" id="regPass" placeholder="Contrase\xf1a" required />\n      <button type="submit">Registrar</button>\n    </form>\n\n    <h3>Login</h3>\n    <form id="formLogin">\n      <input type="text" id="loginUsuario" placeholder="Usuario" required />\n      <input type="password" id="loginPass" placeholder="Contrase\xf1a" required />\n      <button type="submit">Login</button>\n    </form>\n\n    <div id="mensaje"></div>\n\n    <script>\n      const formRegistro = document.getElementById("formRegistro");\n      const formLogin = document.getElementById("formLogin");\n      const mensaje = document.getElementById("mensaje");\n\n      // Registro\n      formRegistro.addEventListener("submit", (e) => {\n        e.preventDefault();\n\n        const usuario = document.getElementById("regUsuario").value;\n        const pass = document.getElementById("regPass").value;\n\n        if (usuario && pass) {\n          // Guardar en localStorage (clave: usuario, valor: contrase\xf1a)\n          localStorage.setItem(usuario, pass);\n          mensaje.textContent = "Usuario registrado con \xe9xito.";\n        } else {\n          mensaje.textContent = "Completa todos los campos.";\n        }\n\n        formRegistro.reset();\n      });\n\n      // Login\n      formLogin.addEventListener("submit", (e) => {\n        e.preventDefault();\n\n        const usuario = document.getElementById("loginUsuario").value;\n        const pass = document.getElementById("loginPass").value;\n\n        const storedPass = localStorage.getItem(usuario);\n\n        if (storedPass === pass) {\n          mensaje.textContent = `\xa1Bienvenido, ${usuario}!`;\n        } else {\n          mensaje.textContent = "Usuario o contrase\xf1a incorrectos.";\n        }\n\n        formLogin.reset();\n      });\n    <\/script>\n  </body>\n</html>\n'})})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Con estos ejercicios ya dominas las bases para manipular el DOM, manejar eventos y guardar informaci\xf3n en el navegador usando Web Storage. Recuerda que lo m\xe1s importante es experimentar: cambia los ejemplos, rompe el c\xf3digo, vu\xe9lvelo a armar, exitos. - Sary :D"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>i});var r=a(6540);const t={},o=r.createContext(t);function s(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);
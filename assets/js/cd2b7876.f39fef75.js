"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6964],{1156:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"computacion-3/semana-1/containers","title":"Contenedores","description":"Antes de profundizar en los contenedores, es \xfatil entender primero el concepto de m\xe1quinas virtuales (VMs), ya que los contenedores evolucionan a partir de esta tecnolog\xeda.","source":"@site/docs/computacion-3/semana-1/containers.md","sourceDirName":"computacion-3/semana-1","slug":"/computacion-3/semana-1/containers","permalink":"/docs/computacion-3/semana-1/containers","draft":false,"unlisted":false,"editUrl":"https://github.com/Kelocoes/docukelo-icesi/tree/main/docs/computacion-3/semana-1/containers.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"S1 - Introducci\xf3n del curso","permalink":"/docs/category/s1---introducci\xf3n-del-curso-1"},"next":{"title":"Comandos de Docker","permalink":"/docs/computacion-3/semana-1/docker-commands"}}');var a=s(4848),o=s(8453);const r={sidebar_position:1},t="Contenedores",c={},l=[{value:"M\xe1quinas virtuales",id:"m\xe1quinas-virtuales",level:2},{value:"Hipervisor",id:"hipervisor",level:3},{value:"Tipos de m\xe1quinas virtuales",id:"tipos-de-m\xe1quinas-virtuales",level:3},{value:"Ventajas y desventajas de las m\xe1quinas virtuales",id:"ventajas-y-desventajas-de-las-m\xe1quinas-virtuales",level:3},{value:"Contenedores",id:"contenedores-1",level:2},{value:"Docker",id:"docker",level:3},{value:"Diferencias clave entre contenedores y m\xe1quinas virtuales",id:"diferencias-clave-entre-contenedores-y-m\xe1quinas-virtuales",level:3},{value:"Ventajas y desventajas de los contenedores",id:"ventajas-y-desventajas-de-los-contenedores",level:3}];function d(e){const n={h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"contenedores",children:"Contenedores"})}),"\n",(0,a.jsx)(n.p,{children:"Antes de profundizar en los contenedores, es \xfatil entender primero el concepto de m\xe1quinas virtuales (VMs), ya que los contenedores evolucionan a partir de esta tecnolog\xeda."}),"\n",(0,a.jsx)(n.h2,{id:"m\xe1quinas-virtuales",children:"M\xe1quinas virtuales"}),"\n",(0,a.jsx)(n.p,{children:'Las m\xe1quinas virtuales permiten ejecutar sistemas operativos y aplicaciones en un entorno virtualizado, separado del hardware f\xedsico. Por ejemplo, si tienes Linux instalado pero necesitas ejecutar una aplicaci\xf3n exclusiva de Windows, puedes crear una VM con Windows dentro de tu sistema Linux. En este contexto, el computador f\xedsico se denomina "host" y cada m\xe1quina virtual es un "guest". Es posible tener m\xfaltiples guests en un mismo host, compartiendo los recursos f\xedsicos.'}),"\n",(0,a.jsx)(n.h3,{id:"hipervisor",children:"Hipervisor"}),"\n",(0,a.jsx)(n.p,{children:"El hipervisor es el software responsable de gestionar las m\xe1quinas virtuales. Su funci\xf3n principal es asignar recursos (CPU, memoria, almacenamiento) entre el host y los guests. Existen dos tipos principales:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:'Hipervisor tipo 1 ("bare-metal")'}),": Se ejecuta directamente sobre el hardware, sin necesidad de un sistema operativo subyacente. Ofrece mayor rendimiento y eficiencia. Ejemplos: VMware ESXi, Microsoft Hyper-V."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Hipervisor tipo 2"}),": Se instala sobre un sistema operativo existente, lo que facilita su uso pero puede afectar el rendimiento. Ejemplos: Oracle VirtualBox, VMware Workstation."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"tipos-de-m\xe1quinas-virtuales",children:"Tipos de m\xe1quinas virtuales"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"VMs completas"}),": Emulan todo el hardware, permitiendo ejecutar sistemas operativos completos. Son ideales para aplicaciones que requieren aislamiento total, pero consumen m\xe1s recursos."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"VMs ligeras (contenedores)"}),": Comparten el n\xfacleo del sistema operativo del host, lo que las hace m\xe1s eficientes. Son ideales para ejecutar aplicaciones espec\xedficas."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"VMs de prop\xf3sito espec\xedfico"}),": Optimizadas para tareas concretas, sacrificando versatilidad por rendimiento."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"ventajas-y-desventajas-de-las-m\xe1quinas-virtuales",children:"Ventajas y desventajas de las m\xe1quinas virtuales"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Ventajas:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Aislamiento total entre entornos."}),"\n",(0,a.jsx)(n.li,{children:"Flexibilidad para ejecutar m\xfaltiples sistemas operativos."}),"\n",(0,a.jsx)(n.li,{children:"\xdatiles para pruebas y desarrollo en diferentes plataformas."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Desventajas:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Alto consumo de recursos."}),"\n",(0,a.jsx)(n.li,{children:"Gesti\xf3n compleja de m\xfaltiples VMs."}),"\n",(0,a.jsx)(n.li,{children:"Menor rendimiento comparado con la ejecuci\xf3n directa en hardware."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"contenedores-1",children:"Contenedores"}),"\n",(0,a.jsx)(n.p,{children:"Los contenedores representan una evoluci\xf3n en la virtualizaci\xf3n, enfoc\xe1ndose en la eficiencia y portabilidad. A diferencia de las VMs, los contenedores no emulan hardware completo, sino que comparten el n\xfacleo del sistema operativo del host. Esto permite iniciar aplicaciones de forma r\xe1pida y consumir menos recursos."}),"\n",(0,a.jsx)(n.p,{children:"Un contenedor encapsula una aplicaci\xf3n y sus dependencias, asegurando que se ejecute de manera consistente en cualquier entorno. Para gestionar contenedores, se utilizan plataformas como Docker, que simplifican la creaci\xf3n, despliegue y administraci\xf3n de estos entornos aislados."}),"\n",(0,a.jsx)("img",{src:"/img/docker-architecture.png",alt:"Contenedor",width:"600"}),"\n",(0,a.jsx)(n.h3,{id:"docker",children:"Docker"}),"\n",(0,a.jsx)(n.p,{children:"Docker es la plataforma de contenedores m\xe1s popular. Permite empaquetar aplicaciones junto con sus dependencias en im\xe1genes portables, facilitando el despliegue en cualquier sistema compatible. Docker utiliza un motor de contenedores que gestiona la ejecuci\xf3n y el aislamiento de las aplicaciones."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Razones de popularidad:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Portabilidad:"})," Las im\xe1genes Docker pueden ejecutarse en cualquier sistema con Docker instalado, desde laptops hasta servidores en la nube."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Aislamiento:"})," Cada contenedor es independiente, evitando conflictos entre aplicaciones."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Eficiencia:"})," Los contenedores son ligeros y permiten ejecutar m\xe1s aplicaciones en el mismo hardware."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"diferencias-clave-entre-contenedores-y-m\xe1quinas-virtuales",children:"Diferencias clave entre contenedores y m\xe1quinas virtuales"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Arquitectura:"})," Las VMs emulan hardware completo; los contenedores comparten el n\xfacleo del host."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Consumo de recursos:"})," Los contenedores son m\xe1s ligeros y eficientes."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Velocidad de inicio:"})," Los contenedores se inician en segundos, mientras que las VMs pueden tardar minutos."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Portabilidad:"})," Los contenedores facilitan el despliegue en diferentes entornos sin cambios en la configuraci\xf3n."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"ventajas-y-desventajas-de-los-contenedores",children:"Ventajas y desventajas de los contenedores"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Ventajas:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Portabilidad y consistencia entre entornos de desarrollo, pruebas y producci\xf3n."}),"\n",(0,a.jsx)(n.li,{children:"Aislamiento de aplicaciones, evitando conflictos de dependencias."}),"\n",(0,a.jsx)(n.li,{children:"Eficiencia en el uso de recursos y rapidez en el despliegue."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Desventajas:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Menor aislamiento de seguridad comparado con las VMs, ya que comparten el n\xfacleo del host."}),"\n",(0,a.jsx)(n.li,{children:"Gesti\xf3n compleja en entornos con muchos contenedores (solucionable con herramientas como Kubernetes)."}),"\n",(0,a.jsx)(n.li,{children:"Persistencia de datos: Los datos dentro de un contenedor pueden perderse al eliminarlo; se recomienda usar vol\xfamenes o servicios externos para almacenamiento persistente."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Informaci\xf3n que puede ser de inter\xe9s"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Los contenedores han impulsado pr\xe1cticas modernas como DevOps y microservicios, permitiendo desarrollar, probar y desplegar aplicaciones de manera \xe1gil y escalable."}),"\n",(0,a.jsx)(n.li,{children:"Herramientas como Kubernetes permiten orquestar y gestionar grandes cantidades de contenedores, automatizando tareas como escalado, balanceo de carga y recuperaci\xf3n ante fallos, aunque para ejercicios de peque\xf1a-mediana escala no es necesario complicarse con estas herramientas."}),"\n",(0,a.jsx)(n.li,{children:"Los contenedores no sustituyen a las VMs en todos los casos; cada tecnolog\xeda tiene su lugar dependiendo de los requisitos de aislamiento, seguridad y compatibilidad. Por ejemplo, las VMs siguen siendo \xfatiles para ejecutar aplicaciones que requieren un sistema operativo completo o para entornos de alta seguridad donde el aislamiento es cr\xedtico."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>t});var i=s(6540);const a={},o=i.createContext(a);function r(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);
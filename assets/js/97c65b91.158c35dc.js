"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8235],{6030:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"computacion-2/semana-5/spring-jpa","title":"Spring Data JPA","description":"Introducci\xf3n a Spring Data JPA.","source":"@site/docs/computacion-2/semana-5/spring-jpa.md","sourceDirName":"computacion-2/semana-5","slug":"/computacion-2/semana-5/spring-jpa","permalink":"/docs/computacion-2/semana-5/spring-jpa","draft":false,"unlisted":false,"editUrl":"https://github.com/Kelocoes/docukelo-icesi/tree/main/docs/computacion-2/semana-5/spring-jpa.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Spring Boot: Introducci\xf3n y Primeros Pasos","permalink":"/docs/computacion-2/semana-5/spring-boot"},"next":{"title":"S6 - JPA","permalink":"/docs/category/s6---jpa"}}');var a=i(4848),r=i(8453);const o={sidebar_position:2},t="Spring Data JPA",c={},l=[{value:"1. \xbfQu\xe9 es JPA?",id:"1-qu\xe9-es-jpa",level:2},{value:"2. \xbfQu\xe9 es Hibernate?",id:"2-qu\xe9-es-hibernate",level:2},{value:"3. Spring Data JPA",id:"3-spring-data-jpa",level:2},{value:"4. Creando Entities en Spring Boot",id:"4-creando-entities-en-spring-boot",level:2},{value:"Anotaciones m\xe1s comunes en entidades:",id:"anotaciones-m\xe1s-comunes-en-entidades",level:3},{value:"5. Relaciones entre entidades",id:"5-relaciones-entre-entidades",level:2},{value:"OneToMany y ManyToOne (Uno a muchos y muchos a uno)",id:"onetomany-y-manytoone-uno-a-muchos-y-muchos-a-uno",level:3},{value:"ManyToMany (Muchos a muchos)",id:"manytomany-muchos-a-muchos",level:3},{value:"6. Creaci\xf3n de Repositorios",id:"6-creaci\xf3n-de-repositorios",level:2},{value:"7. Uso en un Service y Controller",id:"7-uso-en-un-service-y-controller",level:2},{value:"8. Resumen",id:"8-resumen",level:2}];function d(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"spring-data-jpa",children:"Spring Data JPA"})}),"\n",(0,a.jsx)(n.p,{children:"Introducci\xf3n a Spring Data JPA."}),"\n",(0,a.jsx)("iframe",{src:"https://www.canva.com/design/DAGuk3Z78AE/0fZHHcXwXwB7PL92i_qtpQ/view?embed",width:"100%",height:"600px",allowfullscreen:"true",frameborder:"0"}),"\n",(0,a.jsx)(n.h2,{id:"1-qu\xe9-es-jpa",children:"1. \xbfQu\xe9 es JPA?"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"JPA (Java Persistence API)"})," es una especificaci\xf3n de Java que define c\xf3mo manejar datos relacionales en aplicaciones Java.",(0,a.jsx)(n.br,{}),"\n","No es una implementaci\xf3n, sino un ",(0,a.jsx)(n.strong,{children:"conjunto de interfaces y anotaciones"})," que permiten trabajar con objetos Java y almacenarlos en bases de datos relacionales sin necesidad de escribir SQL directamente."]}),"\n",(0,a.jsx)(n.p,{children:"Ejemplo de anotaci\xf3n b\xe1sica de JPA:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"import jakarta.persistence.Entity;\nimport jakarta.persistence.Id;\n\n@Entity\npublic class Usuario {\n    @Id\n    private Long id;\n    private String nombre;\n}\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"2-qu\xe9-es-hibernate",children:"2. \xbfQu\xe9 es Hibernate?"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Hibernate"})," es la implementaci\xf3n m\xe1s usada de JPA.",(0,a.jsx)(n.br,{}),"\n","Cuando usas JPA en Spring Boot, lo m\xe1s com\xfan es que ",(0,a.jsx)(n.strong,{children:"internamente se utilice Hibernate como proveedor ORM"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Hibernate agrega:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Manejo avanzado de cach\xe9."}),"\n",(0,a.jsx)(n.li,{children:"Traducci\xf3n autom\xe1tica de HQL (Hibernate Query Language) a SQL."}),"\n",(0,a.jsx)(n.li,{children:"Gesti\xf3n de proxies para relaciones."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"En resumen:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"JPA = Est\xe1ndar"})," (define c\xf3mo)."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Hibernate = Implementaci\xf3n"})," (realiza el c\xf3mo)."]}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"3-spring-data-jpa",children:"3. Spring Data JPA"}),"\n",(0,a.jsxs)(n.p,{children:["Spring Data JPA es un m\xf3dulo de Spring que simplifica a\xfan m\xe1s el uso de JPA y Hibernate.",(0,a.jsx)(n.br,{}),"\n","Permite crear repositorios sin necesidad de implementar consultas SQL o HQL de forma manual."]}),"\n",(0,a.jsx)(n.p,{children:"Ejemplo de repositorio con Spring Data JPA:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"import org.springframework.data.jpa.repository.JpaRepository;\n\npublic interface UsuarioRepository extends JpaRepository<Usuario, Long> {\n    // Consulta personalizada con query method\n    Usuario findByNombre(String nombre);\n}\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"4-creando-entities-en-spring-boot",children:"4. Creando Entities en Spring Boot"}),"\n",(0,a.jsxs)(n.p,{children:["En Spring Boot, las entidades suelen colocarse en el paquete ",(0,a.jsx)(n.code,{children:"model"})," o ",(0,a.jsx)(n.code,{children:"entity"}),".",(0,a.jsx)(n.br,{}),"\n","Ejemplo b\xe1sico:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'import jakarta.persistence.*;\n\n@Entity\n@Table(name = "usuarios")\npublic class Usuario {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @Column(nullable = false, length = 100)\n    private String nombre;\n\n    @Column(unique = true, nullable = false)\n    private String email;\n\n    // Getters y Setters\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"anotaciones-m\xe1s-comunes-en-entidades",children:"Anotaciones m\xe1s comunes en entidades:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"@Entity"})," \u2192 Marca la clase como entidad."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"@Table"})," \u2192 Permite configurar el nombre de la tabla."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"@Id"})," \u2192 Define la clave primaria."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"@GeneratedValue"})," \u2192 Estrategia de generaci\xf3n de IDs (",(0,a.jsx)(n.code,{children:"AUTO"}),", ",(0,a.jsx)(n.code,{children:"IDENTITY"}),", ",(0,a.jsx)(n.code,{children:"SEQUENCE"}),")."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"@Column"})," \u2192 Configura columnas (longitud, unicidad, nullables)."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"@Transient"})," \u2192 Ignora un campo para que no se persista en la base de datos."]}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"5-relaciones-entre-entidades",children:"5. Relaciones entre entidades"}),"\n",(0,a.jsx)(n.h3,{id:"onetomany-y-manytoone-uno-a-muchos-y-muchos-a-uno",children:"OneToMany y ManyToOne (Uno a muchos y muchos a uno)"}),"\n",(0,a.jsxs)(n.p,{children:["Ejemplo: ",(0,a.jsx)(n.strong,{children:"Un usuario puede tener muchos pedidos"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'import jakarta.persistence.*;\nimport java.util.List;\n\n@Entity\n@Table(name = "usuarios")\npublic class Usuario {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    private String nombre;\n\n    @OneToMany(mappedBy = "usuario", cascade = CascadeType.ALL, orphanRemoval = true)\n    private List<Pedido> pedidos;\n\n    // getters y setters\n}\n\n@Entity\n@Table(name = "pedidos")\npublic class Pedido {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    private String producto;\n\n    @ManyToOne\n    @JoinColumn(name = "usuario_id", nullable = false)\n    private Usuario usuario;\n\n    // getters y setters\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"manytomany-muchos-a-muchos",children:"ManyToMany (Muchos a muchos)"}),"\n",(0,a.jsxs)(n.p,{children:["Ejemplo: ",(0,a.jsx)(n.strong,{children:"Un estudiante puede tener muchos cursos y un curso puede tener muchos estudiantes"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'@Entity\n@Table(name = "estudiantes")\npublic class Estudiante {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    private String nombre;\n\n    @ManyToMany\n    @JoinTable(\n        name = "estudiante_curso",\n        joinColumns = @JoinColumn(name = "estudiante_id"),\n        inverseJoinColumns = @JoinColumn(name = "curso_id")\n    )\n    private List<Curso> cursos;\n}\n\n@Entity\n@Table(name = "cursos")\npublic class Curso {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    private String nombre;\n\n    @ManyToMany(mappedBy = "cursos")\n    private List<Estudiante> estudiantes;\n}\n'})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"6-creaci\xf3n-de-repositorios",children:"6. Creaci\xf3n de Repositorios"}),"\n",(0,a.jsxs)(n.p,{children:["Spring Boot detecta autom\xe1ticamente las interfaces que extienden ",(0,a.jsx)(n.code,{children:"JpaRepository"})," y crea las implementaciones en tiempo de ejecuci\xf3n."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"import org.springframework.data.jpa.repository.JpaRepository;\nimport java.util.List;\n\npublic interface PedidoRepository extends JpaRepository<Pedido, Long> {\n    List<Pedido> findByProducto(String producto);\n    List<Pedido> findByUsuarioId(Long usuarioId);\n}\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"7-uso-en-un-service-y-controller",children:"7. Uso en un Service y Controller"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"import org.springframework.stereotype.Service;\nimport java.util.List;\n\n@Service\npublic class UsuarioService {\n\n    private final UsuarioRepository usuarioRepository;\n\n    public UsuarioService(UsuarioRepository usuarioRepository) {\n        this.usuarioRepository = usuarioRepository;\n    }\n\n    public Usuario crearUsuario(Usuario usuario) {\n        return usuarioRepository.save(usuario);\n    }\n\n    public List<Usuario> listarUsuarios() {\n        return usuarioRepository.findAll();\n    }\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Y en un ",(0,a.jsx)(n.strong,{children:"Controller"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'import org.springframework.web.bind.annotation.*;\nimport java.util.List;\n\n@RestController\n@RequestMapping("/usuarios")\npublic class UsuarioController {\n\n    private final UsuarioService usuarioService;\n\n    public UsuarioController(UsuarioService usuarioService) {\n        this.usuarioService = usuarioService;\n    }\n\n    @PostMapping\n    public Usuario crear(@RequestBody Usuario usuario) {\n        return usuarioService.crearUsuario(usuario);\n    }\n\n    @GetMapping\n    public List<Usuario> listar() {\n        return usuarioService.listarUsuarios();\n    }\n}\n'})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"8-resumen",children:"8. Resumen"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"JPA"})," \u2192 Es una especificaci\xf3n (interfaz)."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Hibernate"})," \u2192 Es la implementaci\xf3n m\xe1s usada de JPA."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Spring Data JPA"})," \u2192 Abstrae la complejidad y genera autom\xe1ticamente las implementaciones de repositorios."]}),"\n",(0,a.jsxs)(n.li,{children:["Con ",(0,a.jsx)(n.strong,{children:"anotaciones"})," se definen entidades, columnas y relaciones."]}),"\n",(0,a.jsxs)(n.li,{children:["Con ",(0,a.jsx)(n.strong,{children:"repositorios"})," se accede f\xe1cilmente a los datos sin escribir SQL manualmente."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Esto permite que el desarrollador se enfoque en la l\xf3gica de negocio y no en detalles de persistencia."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>t});var s=i(6540);const a={},r=s.createContext(a);function o(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4627],{2308:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"computacion-3/semana-3/intro-ts","title":"Typescript","description":"TypeScript es un superset de JavaScript desarrollado por Microsoft que a\xf1ade tipado est\xe1tico y otras caracter\xedsticas modernas para mejorar la calidad, mantenibilidad y escalabilidad del c\xf3digo. Esto significa que todo c\xf3digo JavaScript v\xe1lido es tambi\xe9n v\xe1lido en TypeScript, pero adem\xe1s TypeScript ofrece herramientas adicionales.","source":"@site/docs/computacion-3/semana-3/intro-ts.md","sourceDirName":"computacion-3/semana-3","slug":"/computacion-3/semana-3/intro-ts","permalink":"/docs/computacion-3/semana-3/intro-ts","draft":false,"unlisted":false,"editUrl":"https://github.com/Kelocoes/docukelo-icesi/tree/main/docs/computacion-3/semana-3/intro-ts.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"S3 - Typescript & Express","permalink":"/docs/category/s3---typescript--express"},"next":{"title":"Ejercicios de Typescript","permalink":"/docs/computacion-3/semana-3/ts-exercises"}}');var i=s(4848),a=s(8453);const c={sidebar_position:1},o="Typescript",t={},l=[{value:"1. \xbfPor qu\xe9 usar TypeScript?",id:"1-por-qu\xe9-usar-typescript",level:2},{value:"2. Instalaci\xf3n y configuraci\xf3n b\xe1sica",id:"2-instalaci\xf3n-y-configuraci\xf3n-b\xe1sica",level:2},{value:"2.1 Instalaci\xf3n global",id:"21-instalaci\xf3n-global",level:3},{value:"2.2 Inicializar un proyecto con TypeScript",id:"22-inicializar-un-proyecto-con-typescript",level:3},{value:"2.3 Compilar y ejecutar",id:"23-compilar-y-ejecutar",level:3},{value:"3. Tipos b\xe1sicos en TypeScript",id:"3-tipos-b\xe1sicos-en-typescript",level:2},{value:"4. Funciones en TypeScript",id:"4-funciones-en-typescript",level:2},{value:"5. Interfaces y Objetos",id:"5-interfaces-y-objetos",level:2},{value:"6. Clases en TypeScript",id:"6-clases-en-typescript",level:2},{value:"7. M\xf3dulos en TypeScript",id:"7-m\xf3dulos-en-typescript",level:2},{value:"8. Tipos avanzados",id:"8-tipos-avanzados",level:2},{value:"9. Ejecuci\xf3n en el navegador",id:"9-ejecuci\xf3n-en-el-navegador",level:2},{value:"10. Interface vs Type Alias",id:"10-interface-vs-type-alias",level:2},{value:"Ejemplo: Algo que se puede hacer con <code>type</code> pero no con <code>interface</code>",id:"ejemplo-algo-que-se-puede-hacer-con-type-pero-no-con-interface",level:3},{value:"11. Recomendaciones",id:"11-recomendaciones",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"typescript",children:"Typescript"})}),"\n",(0,i.jsxs)(n.p,{children:["TypeScript es un ",(0,i.jsx)(n.strong,{children:"superset de JavaScript"})," desarrollado por Microsoft que a\xf1ade ",(0,i.jsx)(n.strong,{children:"tipado est\xe1tico"})," y otras caracter\xedsticas modernas para mejorar la calidad, mantenibilidad y escalabilidad del c\xf3digo. Esto significa que ",(0,i.jsx)(n.strong,{children:"todo c\xf3digo JavaScript v\xe1lido es tambi\xe9n v\xe1lido en TypeScript"}),", pero adem\xe1s TypeScript ofrece herramientas adicionales."]}),"\n",(0,i.jsx)(n.h2,{id:"1-por-qu\xe9-usar-typescript",children:"1. \xbfPor qu\xe9 usar TypeScript?"}),"\n",(0,i.jsxs)(n.p,{children:["JavaScript es un lenguaje flexible y din\xe1mico, pero esa flexibilidad puede llevar a errores dif\xedciles de detectar. TypeScript ayuda a prevenirlos ",(0,i.jsx)(n.strong,{children:"antes de ejecutar el c\xf3digo"})," gracias al tipado est\xe1tico y a herramientas de desarrollo m\xe1s potentes."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Ventajas principales:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Tipado est\xe1tico (evita errores comunes de tipo)."}),"\n",(0,i.jsx)(n.li,{children:"Autocompletado y mejor soporte en editores como VS Code."}),"\n",(0,i.jsx)(n.li,{children:"Detecci\xf3n de errores en tiempo de compilaci\xf3n."}),"\n",(0,i.jsx)(n.li,{children:"Uso de caracter\xedsticas modernas de JavaScript incluso antes de que est\xe9n soportadas por todos los navegadores."}),"\n",(0,i.jsx)(n.li,{children:"C\xf3digo m\xe1s f\xe1cil de mantener."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Ejemplo de problema en JavaScript:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'function sumar(a, b) {\n  return a + b;\n}\n\nconsole.log(sumar(5, "10")); // "510" en vez de 15\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Soluci\xf3n en TypeScript:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"function sumar(a: number, b: number): number {\n  return a + b;\n}\n\n// console.log(sumar(5, \"10\")); // Error: Argument of type 'string' is not assignable to parameter of type 'number'.\nconsole.log(sumar(5, 10)); // 15\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"2-instalaci\xf3n-y-configuraci\xf3n-b\xe1sica",children:"2. Instalaci\xf3n y configuraci\xf3n b\xe1sica"}),"\n",(0,i.jsx)(n.h3,{id:"21-instalaci\xf3n-global",children:"2.1 Instalaci\xf3n global"}),"\n",(0,i.jsx)(n.p,{children:"Necesitamos Node.js y npm instalados."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install -g typescript\n"})}),"\n",(0,i.jsx)(n.p,{children:"Verificar instalaci\xf3n:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"tsc -v\n"})}),"\n",(0,i.jsx)(n.h3,{id:"22-inicializar-un-proyecto-con-typescript",children:"2.2 Inicializar un proyecto con TypeScript"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mkdir proyecto-ts\ncd proyecto-ts\nnpm init -y\nnpm install typescript --save-dev\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Generar el archivo de configuraci\xf3n ",(0,i.jsx)(n.code,{children:"tsconfig.json"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npx tsc --init\n"})}),"\n",(0,i.jsx)(n.p,{children:"Esto crear\xe1 un archivo con muchas opciones comentadas. Las m\xe1s importantes para empezar:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "compilerOptions": {\n    "target": "es6",               // Versi\xf3n de JS a generar\n    "module": "commonjs",          // Sistema de m\xf3dulos\n    "outDir": "./dist",            // Carpeta de salida\n    "rootDir": "./src",            // Carpeta de c\xf3digo fuente\n    "strict": true,                 // Habilitar todas las comprobaciones estrictas\n    "esModuleInterop": true         // Mejor compatibilidad con m\xf3dulos\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Estructura recomendada del proyecto:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"proyecto-ts/\n\u251c\u2500\u2500 src/\n\u2502   \u2514\u2500\u2500 index.ts\n\u251c\u2500\u2500 dist/\n\u251c\u2500\u2500 package.json\n\u2514\u2500\u2500 tsconfig.json\n"})}),"\n",(0,i.jsx)(n.h3,{id:"23-compilar-y-ejecutar",children:"2.3 Compilar y ejecutar"}),"\n",(0,i.jsx)(n.p,{children:"Para compilar:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npx tsc\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Esto generar\xe1 archivos ",(0,i.jsx)(n.code,{children:".js"})," en ",(0,i.jsx)(n.code,{children:"dist/"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Para ejecutar:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"node dist/index.js\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Si queremos compilar y ejecutar en un solo paso, podemos usar ",(0,i.jsx)(n.code,{children:"ts-node"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install -D ts-node\nnpx ts-node src/index.ts\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"3-tipos-b\xe1sicos-en-typescript",children:"3. Tipos b\xe1sicos en TypeScript"}),"\n",(0,i.jsx)(n.p,{children:"TypeScript a\xf1ade tipos est\xe1ticos que permiten definir qu\xe9 tipo de dato esperamos."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'let nombre: string = "Kevin";\nlet edad: number = 25;\nlet activo: boolean = true;\nlet indefinido: undefined = undefined;\nlet nulo: null = null;\nlet cualquiera: any = "Hola"; // Evitar en lo posible\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arreglos:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'let numeros: number[] = [1, 2, 3];\nlet letras: Array<string> = ["a", "b", "c"];\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Tuplas:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'let persona: [string, number] = ["Kevin", 25];\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Enums:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'enum Color {\n  Rojo = "ROJO",\n  Verde = "VERDE",\n  Azul = "AZUL"\n}\n\nlet colorFav: Color = Color.Verde;\nconsole.log(colorFav); // "VERDE"\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Union types:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'let id: string | number;\nid = "ABC123";\nid = 42;\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Type aliases:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"type ID = string | number;\nlet usuarioID: ID = 101;\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"4-funciones-en-typescript",children:"4. Funciones en TypeScript"}),"\n",(0,i.jsx)(n.p,{children:"Podemos tipar par\xe1metros y valores de retorno."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'function saludar(nombre: string): string {\n  return `Hola, ${nombre}`;\n}\n\nconsole.log(saludar("Kevin"));\n'})}),"\n",(0,i.jsx)(n.p,{children:"Par\xe1metros opcionales y por defecto:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'function multiplicar(a: number, b: number = 2, mensaje?: string): number {\n  if (mensaje) console.log(mensaje);\n  return a * b;\n}\n\nconsole.log(multiplicar(3));\nconsole.log(multiplicar(3, 4, "Calculando..."));\n'})}),"\n",(0,i.jsx)(n.p,{children:"Funciones flecha:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const dividir = (a: number, b: number): number => a / b;\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"5-interfaces-y-objetos",children:"5. Interfaces y Objetos"}),"\n",(0,i.jsx)(n.p,{children:"Las interfaces definen la forma de un objeto."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'interface Usuario {\n  id: number;\n  nombre: string;\n  activo?: boolean; // opcional\n}\n\nlet user1: Usuario = {\n  id: 1,\n  nombre: "Kevin"\n};\n'})}),"\n",(0,i.jsx)(n.p,{children:"Interfaces con funciones:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"interface Operacion {\n  (a: number, b: number): number;\n}\n\nconst sumar: Operacion = (x, y) => x + y;\nconsole.log(sumar(5, 3));\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"6-clases-en-typescript",children:"6. Clases en TypeScript"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'class Persona {\n  private nombre: string;\n  protected edad: number;\n  public activo: boolean;\n\n  constructor(nombre: string, edad: number, activo: boolean) {\n    this.nombre = nombre;\n    this.edad = edad;\n    this.activo = activo;\n  }\n\n  saludar(): string {\n    return `Hola, soy ${this.nombre}`;\n  }\n}\n\nconst p1 = new Persona("Kevin", 25, true);\nconsole.log(p1.saludar());\n'})}),"\n",(0,i.jsx)(n.p,{children:"Herencia:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"class Estudiante extends Persona {\n  curso: string;\n  constructor(nombre: string, edad: number, activo: boolean, curso: string) {\n    super(nombre, edad, activo);\n    this.curso = curso;\n  }\n}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"7-m\xf3dulos-en-typescript",children:"7. M\xf3dulos en TypeScript"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Exportar:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// archivo: utils.ts\nexport function sumar(a: number, b: number): number {\n  return a + b;\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Importar:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'// archivo: index.ts\nimport { sumar } from "./utils";\nconsole.log(sumar(3, 4));\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"8-tipos-avanzados",children:"8. Tipos avanzados"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Generics:"})}),"\n",(0,i.jsxs)(n.p,{children:["Los gen\xe9ricos as\xed como en Java nos permiten crear funciones y clases que pueden trabajar con diferentes tipos de datos sin perder la seguridad de tipos.\nEn ellos especificaremos un tipo gen\xe9rico denotado por ",(0,i.jsx)(n.code,{children:"<T>"})," el cual podemos usar en lugar de un tipo espec\xedfico."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'function identidad<T>(valor: T): T {\n  return valor;\n}\n\nconsole.log(identidad<string>("Hola"));\nconsole.log(identidad<number>(123));\n'})}),"\n",(0,i.jsxs)(n.p,{children:["El ejeemplo anterior muestra una funci\xf3n que recibe un valor de tipo gen\xe9rico ",(0,i.jsx)(n.code,{children:"T"})," y lo retorna sin modificarlo. Esto permite que la funci\xf3n sea flexible y reutilizable con diferentes tipos de datos."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Intersection types:"})}),"\n",(0,i.jsx)(n.p,{children:"Estos tipos permiten combinar m\xfaltiples tipos en uno solo, creando un nuevo tipo que tiene todas las propiedades de los tipos combinados."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'interface A { a: string; }\ninterface B { b: number; }\n// Lo mismo que interface C { a: string; b: number; }\n\ntype AB = A & B;\nlet obj: AB = { a: "Hola", b: 42 };\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"9-ejecuci\xf3n-en-el-navegador",children:"9. Ejecuci\xf3n en el navegador"}),"\n",(0,i.jsx)(n.p,{children:"Para usar TypeScript en el navegador:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Compilar a JavaScript."}),"\n",(0,i.jsxs)(n.li,{children:["Incluir el archivo ",(0,i.jsx)(n.code,{children:".js"})," en el HTML."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Ejemplo:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'// src/app.ts\nconst mensaje: string = "Hola desde TS";\nconsole.log(mensaje);\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'\x3c!-- index.html --\x3e\n<script src="dist/app.js"><\/script>\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"10-interface-vs-type-alias",children:"10. Interface vs Type Alias"}),"\n",(0,i.jsx)(n.p,{children:"En TypeScript, tanto las interfaces como los type aliases se utilizan para definir tipos, pero tienen algunas diferencias clave:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Interfaces"}),": Se utilizan principalmente para definir la forma de un objeto. Pueden ser extendidas y son ideales para definir contratos claros entre diferentes partes del c\xf3digo."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"interface Usuario {\n  id: number;\n  nombre: string;\n}\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Type Aliases"}),": Se utilizan para definir tipos m\xe1s complejos, incluyendo uniones, tuplas y tipos primitivos. No pueden ser extendidos como las interfaces, pero son m\xe1s flexibles."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"type ID = string | number;\ntype Usuario = {\n  id: ID;\n  nombre: string;\n};\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"ejemplo-algo-que-se-puede-hacer-con-type-pero-no-con-interface",children:["Ejemplo: Algo que se puede hacer con ",(0,i.jsx)(n.code,{children:"type"})," pero no con ",(0,i.jsx)(n.code,{children:"interface"})]}),"\n",(0,i.jsxs)(n.p,{children:["Los ",(0,i.jsx)(n.code,{children:"type aliases"})," permiten definir uniones de tipos, algo que no es posible directamente con ",(0,i.jsx)(n.code,{children:"interface"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'type Resultado = string | number;\n\nlet respuesta: Resultado;\nrespuesta = "\xc9xito";\nrespuesta = 42;\n\n// Esto no se puede hacer con `interface`.\n'})}),"\n",(0,i.jsxs)(n.p,{children:["En este caso, ",(0,i.jsx)(n.code,{children:"Resultado"})," puede ser un ",(0,i.jsx)(n.code,{children:"string"})," o un ",(0,i.jsx)(n.code,{children:"number"}),", lo que lo hace m\xe1s flexible para ciertos escenarios. Las interfaces, por otro lado, est\xe1n dise\xf1adas para describir la forma de objetos y no soportan uniones de tipos."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"11-recomendaciones",children:"11. Recomendaciones"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Activar ",(0,i.jsx)(n.code,{children:"strict"})," en ",(0,i.jsx)(n.code,{children:"tsconfig.json"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Evitar el uso de ",(0,i.jsx)(n.code,{children:"any"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Usar interfaces y tipos para definir contratos claros."}),"\n",(0,i.jsx)(n.li,{children:"Aprovechar autocompletado y an\xe1lisis est\xe1tico del editor."}),"\n",(0,i.jsx)(n.li,{children:"Compilar frecuentemente para detectar errores temprano."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>o});var r=s(6540);const i={},a=r.createContext(i);function c(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);
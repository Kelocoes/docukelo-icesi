"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[122],{2226:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"computacion-3/semana-4/intro-express-pt3","title":"Express | Typescript | Mongodb | Docker. Parte 3","description":"Siguiendo los aspectos a mejorar mencionados anteriormente, en esta secci\xf3n vamos a implementar las siguientes mejoras:","source":"@site/docs/computacion-3/semana-4/intro-express-pt3.md","sourceDirName":"computacion-3/semana-4","slug":"/computacion-3/semana-4/intro-express-pt3","permalink":"/docs/computacion-3/semana-4/intro-express-pt3","draft":false,"unlisted":false,"editUrl":"https://github.com/Kelocoes/docukelo-icesi/tree/main/docs/computacion-3/semana-4/intro-express-pt3.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Express | Typescript | Mongodb | Docker. Parte 2","permalink":"/docs/computacion-3/semana-4/intro-express-pt2"},"next":{"title":"S5 - Jest y pruebas unitarias","permalink":"/docs/category/s5---jest-y-pruebas-unitarias"}}');var a=r(4848),i=r(8453);const o={sidebar_position:2},t="Express | Typescript | Mongodb | Docker. Parte 3",c={},l=[{value:"Autenticaci\xf3n y autorizaci\xf3n",id:"autenticaci\xf3n-y-autorizaci\xf3n",level:2},{value:"Instalaci\xf3n de dependencias",id:"instalaci\xf3n-de-dependencias",level:3},{value:"Creaci\xf3n del servicio de autenticaci\xf3n",id:"creaci\xf3n-del-servicio-de-autenticaci\xf3n",level:3},{value:"Creaci\xf3n del controlador de autenticaci\xf3n",id:"creaci\xf3n-del-controlador-de-autenticaci\xf3n",level:3},{value:"Creaci\xf3n de rutas de autenticaci\xf3n",id:"creaci\xf3n-de-rutas-de-autenticaci\xf3n",level:3},{value:"Protecci\xf3n de rutas",id:"protecci\xf3n-de-rutas",level:3},{value:"Aplicaci\xf3n del middleware de autenticaci\xf3n",id:"aplicaci\xf3n-del-middleware-de-autenticaci\xf3n",level:3},{value:"Ejemplo base para proceso de autorizaci\xf3n",id:"ejemplo-base-para-proceso-de-autorizaci\xf3n",level:3},{value:"TODO",id:"todo",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"express--typescript--mongodb--docker-parte-3",children:"Express | Typescript | Mongodb | Docker. Parte 3"})}),"\n",(0,a.jsx)(n.p,{children:"Siguiendo los aspectos a mejorar mencionados anteriormente, en esta secci\xf3n vamos a implementar las siguientes mejoras:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Autenticaci\xf3n y autorizaci\xf3n"}),": Implementaremos un sistema de autenticaci\xf3n y autorizaci\xf3n utilizando JWT (JSON Web Tokens) para proteger las rutas de la API."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Protecci\xf3n de rutas"}),": A\xf1adiremos middleware para proteger las rutas que requieren autenticaci\xf3n."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"autenticaci\xf3n-y-autorizaci\xf3n",children:"Autenticaci\xf3n y autorizaci\xf3n"}),"\n",(0,a.jsxs)(n.p,{children:["Antes de implementar la autenticaci\xf3n y autorizaci\xf3n, nos aseguraremos de que los usuarios tengan un campo ",(0,a.jsx)(n.code,{children:"role"}),' en su modelo de usuario. Este campo nos permitir\xe1 definir roles como "admin" o "user". Lo mantendremos simple, aunque una implementaci\xf3n m\xe1s robusta podr\xeda incluir un sistema de roles con permisos m\xe1s detallados.']}),"\n",(0,a.jsxs)(n.p,{children:["Primero, modificaremos el archivo ",(0,a.jsx)(n.code,{children:"user.model.ts"})," para incluir el campo ",(0,a.jsx)(n.code,{children:"role"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"export interface UserDocument extends UserInput, mongoose.Document {\n    createdAt: Date,\n    updatedAt: Date,\n    deletedAt: Date\n    roles: UserRole[];\n}\n\nconst userSchema = new mongoose.Schema({\n    name: { type: String, required: true },\n    email: { type: String, required: true, unique: true, index: true },\n    password: { type: String, required: true, select: false },\n    roles: { type: [String], enum: Object.values(UserRole), default: [UserRole.USER] },\n    deletedAt: { type: Date, default: null }\n}, { timestamps: true, collection: 'users' });\n\nexport const UserModel = mongoose.model<UserDocument>(\"User\", userSchema);\n"})}),"\n",(0,a.jsx)(n.h3,{id:"instalaci\xf3n-de-dependencias",children:"Instalaci\xf3n de dependencias"}),"\n",(0,a.jsx)(n.p,{children:"Para implementar la autenticaci\xf3n con JWT, necesitaremos instalar algunas dependencias adicionales:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm install @types/jsonwebtoken --save-dev\nnpm install jsonwebtoken\n"})}),"\n",(0,a.jsx)(n.h3,{id:"creaci\xf3n-del-servicio-de-autenticaci\xf3n",children:"Creaci\xf3n del servicio de autenticaci\xf3n"}),"\n",(0,a.jsxs)(n.p,{children:["Ahora crearemos un servicio de autenticaci\xf3n que maneje el registro, inicio de sesi\xf3n y generaci\xf3n de tokens JWT. Crearemos un nuevo archivo ",(0,a.jsx)(n.code,{children:"auth.service.ts"})," en la carpeta ",(0,a.jsx)(n.code,{children:"services"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"class AuthService {\n    public async login(userLogin: UserLoginInput): Promise<UserLoginOutput> {\n        // Buscar el usuario por correo\n        // Verificar la contrase\xf1a\n        // Generar y devolver el token JWT\n        // Retornar una respuesta\n    }\n\n    public async generateToken(user: UserDocument): Promise<string> {\n    }\n\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Dentro de este servicio, implementaremos los m\xe9todos ",(0,a.jsx)(n.code,{children:"login"})," y ",(0,a.jsx)(n.code,{children:"generateToken"}),". El m\xe9todo ",(0,a.jsx)(n.code,{children:"login"})," verificar\xe1 las credenciales del usuario y generar\xe1 un token JWT si son v\xe1lidas. El m\xe9todo ",(0,a.jsx)(n.code,{children:"generateToken"})," generar\xe1 un token JWT utilizando la biblioteca ",(0,a.jsx)(n.code,{children:"jsonwebtoken"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Empecemos con el login:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'public async login(userLogin: UserLoginInput): Promise<UserLoginOutput> {\n        const userExists: UserDocument | null = await userService.findByEmail(userLogin.email);\n        if (userExists === null) {\n            throw new ReferenceError("Not Authorized");\n        }\n        const isMatch: boolean = await bcrypt.compare(userLogin.password, userExists.password);\n\n        if (!isMatch) {\n            throw new ReferenceError("Not Authorized");\n        }\n\n        return {\n            id: userExists.id,\n            roles: userExists.role,\n            token: await this.generateToken(userExists)\n        };\n    }\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Como puedes ver, primero buscamos al usuario por su correo electr\xf3nico. Si no existe, lanzamos un error de autorizaci\xf3n. Luego, comparamos la contrase\xf1a proporcionada con la almacenada en la base de datos utilizando ",(0,a.jsx)(n.code,{children:"bcrypt"}),". Si las credenciales son v\xe1lidas, generamos un token JWT y lo devolvemos junto con el ID y el rol del usuario."]}),"\n",(0,a.jsxs)(n.p,{children:["No obstante, necesitamos estandarizar las interfaces ",(0,a.jsx)(n.code,{children:"UserLoginInput"})," y ",(0,a.jsx)(n.code,{children:"UserLoginOutput"}),". Crearemos un nuevo archivo ",(0,a.jsx)(n.code,{children:"auth.interface.ts"})," en la carpeta ",(0,a.jsx)(n.code,{children:"interfaces"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"export interface UserLoginInput {\n    email: string;\n    password: string;\n}\n\nexport interface UserLoginOutput {\n    id: string;\n    roles: string[];\n    token: string;\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Ahora, implementemos el m\xe9todo ",(0,a.jsx)(n.code,{children:"generateToken"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"public async generateToken(user: UserDocument): Promise<string> {\n        const payload = {\n            id: user.id,\n            roles: user.roles\n        };\n        return jwt.sign(payload, process.env.JWT_SECRET || 'defaultSecret', { expiresIn: '10m' });\n    }\n"})}),"\n",(0,a.jsxs)(n.p,{children:["En este m\xe9todo, creamos un payload que incluye el ID y los roles del usuario. Luego, utilizamos ",(0,a.jsx)(n.code,{children:"jsonwebtoken"})," para firmar el token con una clave secreta y establecer una expiraci\xf3n de 10 minutos."]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Nota"}),": Aseg\xfarate de definir la variable de entorno ",(0,a.jsx)(n.code,{children:"JWT_SECRET"})," en tu archivo ",(0,a.jsx)(n.code,{children:".env"})," para mayor seguridad. Adem\xe1s de exportar el servicio de autenticaci\xf3n usando el archivo ",(0,a.jsx)(n.code,{children:"index.ts"})," en la carpeta ",(0,a.jsx)(n.code,{children:"services"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"creaci\xf3n-del-controlador-de-autenticaci\xf3n",children:"Creaci\xf3n del controlador de autenticaci\xf3n"}),"\n",(0,a.jsxs)(n.p,{children:["A continuaci\xf3n, crearemos un controlador para manejar las solicitudes de autenticaci\xf3n. Crearemos un nuevo archivo ",(0,a.jsx)(n.code,{children:"auth.controller.ts"})," en la carpeta ",(0,a.jsx)(n.code,{children:"controllers"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'class AuthController {\n    public async login(req: Request, res: Response, next: Function) {\n        try {\n            const token = await authService.login(req.body as UserLoginInput);\n            res.json({ token });\n        } catch (error) {\n            if (error instanceof AppError) {\n                return next(error);\n            } else if (error instanceof ReferenceError) {\n                return res.status(401).json({ message: error.message });\n            }\n            res.status(500).json({ message: "Internal server error" });\n        }\n    }\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Este controlador base se encargar\xe1 de recibir las solicitudes de inicio de sesi\xf3n, llamar al servicio de autenticaci\xf3n y devolver el token JWT en la respuesta con la informaci\xf3n del usuario.\nNo olvides exportar el controlador de autenticaci\xf3n usando el archivo ",(0,a.jsx)(n.code,{children:"index.ts"})," en la carpeta ",(0,a.jsx)(n.code,{children:"controllers"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"creaci\xf3n-de-rutas-de-autenticaci\xf3n",children:"Creaci\xf3n de rutas de autenticaci\xf3n"}),"\n",(0,a.jsxs)(n.p,{children:["Finalmente, crearemos las rutas para manejar las solicitudes de autenticaci\xf3n. Crearemos un nuevo archivo ",(0,a.jsx)(n.code,{children:"auth.route.ts"})," en la carpeta ",(0,a.jsx)(n.code,{children:"routes"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'import express from "express";\nimport { authController } from "../controllers";\n\nexport const router = express.Router();\n\nrouter.post("/login", authController.login);\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Por \xfaltimo, aseg\xfarate de importar y usar estas rutas en tu archivo principal ",(0,a.jsx)(n.code,{children:"index.ts"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'import { router as authRoutes } from "./routes/auth.route";\n\napp.use("/api/auth", authRoutes);\n'})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Nota"}),": Hasta este punto, seguro que te encuentras con un error con c\xf3digo 500, ser\xe1 tu trabajo encontrar d\xf3nde esta el fallo, pero te dar\xe9 una pista, inicialmente se configur\xf3 el modelo de usuario para nunca retornar la contrase\xf1a, por lo que al intentar hacer login, no se puede comparar la contrase\xf1a."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"protecci\xf3n-de-rutas",children:"Protecci\xf3n de rutas"}),"\n",(0,a.jsxs)(n.p,{children:["Para proteger las rutas que requieren autenticaci\xf3n, crearemos un middleware que verifique el token JWT en las solicitudes entrantes. Crearemos un nuevo archivo ",(0,a.jsx)(n.code,{children:"auth.middleware.ts"})," en la carpeta ",(0,a.jsx)(n.code,{children:"middlewares"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import { Request, Response, NextFunction } from 'express';\nimport jwt from 'jsonwebtoken';\n\nconst authMiddleware = (req: Request, res: Response, next: NextFunction) => {\n    const token = req.headers.authorization?.split(' ')[1]; // Suponemos que es de tipo Bearer\n\n    if (!token) {\n        return res.status(401).json({ message: 'Access denied. No token provided.' });\n    }\n\n    try {\n        const secretKey = process.env.JWT_SECRET || 'defaultSecret';\n        const decoded = jwt.verify(token, secretKey);\n        next();\n    } catch (error) {\n        return res.status(403).json({ message: 'Invalid token.' });\n    }\n};\n\nexport default authMiddleware;\n"})}),"\n",(0,a.jsx)(n.p,{children:"Ya a este punto, no es realmente un middleware complejo, ni mucho menos de de autorizaci\xf3n, simplemente verifica si el token est\xe1 presente en la cabecera de la solicitud y lo valida. Si el token es v\xe1lido, permite que la solicitud contin\xfae; de lo contrario, devuelve un error de autorizaci\xf3n."}),"\n",(0,a.jsx)(n.h3,{id:"aplicaci\xf3n-del-middleware-de-autenticaci\xf3n",children:"Aplicaci\xf3n del middleware de autenticaci\xf3n"}),"\n",(0,a.jsx)(n.p,{children:"Para aplicar este middleware a las rutas que requieren autenticaci\xf3n, simplemente lo importamos y lo usamos en las rutas correspondientes. Por ejemplo, si tenemos una ruta protegida para obtener informaci\xf3n del usuario, la definir\xedamos as\xed:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:'import express from "express";\nimport authMiddleware from "../middlewares/auth.middleware";\n\nexport const router = express.Router();\n\nrouter.get("/profile", authMiddleware, controller)\n'})}),"\n",(0,a.jsx)(n.h3,{id:"ejemplo-base-para-proceso-de-autorizaci\xf3n",children:"Ejemplo base para proceso de autorizaci\xf3n"}),"\n",(0,a.jsxs)(n.p,{children:["Para implementar un proceso de autorizaci\xf3n m\xe1s robusto, podr\xedamos crear un middleware que verifique si el usuario tiene un rol espec\xedfico antes de permitir el acceso a ciertas rutas. Por ejemplo, podr\xedamos crear un middleware ",(0,a.jsx)(n.code,{children:"roleMiddleware"}),' que verifique si el usuario tiene el rol de "admin". Esto ser\xe1 tu trabajo, aunque puede ser bastante simple solamente verificando la informaci\xf3n de la solicitud.']}),"\n",(0,a.jsx)(n.h2,{id:"todo",children:"TODO"}),"\n",(0,a.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Implementar el middleware de autorizaci\xf3n (Sencillo)"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Solucionar los errores de tipado que puedan existir."]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Especificar una clave m\xe1s segura"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Agregar el m\xf3dulo de cors."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>t});var s=r(6540);const a={},i=s.createContext(a);function o(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);
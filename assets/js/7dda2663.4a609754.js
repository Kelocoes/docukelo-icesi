"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1710],{4280:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>t});const o=JSON.parse('{"id":"computacion-3/semana-1/docker-commands","title":"Comandos de Docker","description":"Al utilizar docker, tendremos en cuenta m\xfaltiples \xe1reas donde realizar bloques de c\xf3digo o comandos para la configuraci\xf3n de un contenedor. A continuaci\xf3n, se presentan los comandos m\xe1s comunes y \xfatiles para trabajar con Docker.","source":"@site/docs/computacion-3/semana-1/docker-commands.md","sourceDirName":"computacion-3/semana-1","slug":"/computacion-3/semana-1/docker-commands","permalink":"/docs/computacion-3/semana-1/docker-commands","draft":false,"unlisted":false,"editUrl":"https://github.com/Kelocoes/docukelo-icesi/tree/main/docs/computacion-3/semana-1/docker-commands.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Contenedores","permalink":"/docs/computacion-3/semana-1/containers"},"next":{"title":"Gu\xeda de configuraci\xf3n de Docker","permalink":"/docs/computacion-3/semana-1/guide-docker"}}');var s=r(4848),d=r(8453);const c={sidebar_position:2},i="Comandos de Docker",a={},t=[{value:"Comandos b\xe1sicos de Docker",id:"comandos-b\xe1sicos-de-docker",level:2},{value:"Estructura de un Dockerfile",id:"estructura-de-un-dockerfile",level:2},{value:"Estructura de un docker-compose.yml",id:"estructura-de-un-docker-composeyml",level:2},{value:"Comandos para trabajar con Docker Compose",id:"comandos-para-trabajar-con-docker-compose",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"comandos-de-docker",children:"Comandos de Docker"})}),"\n",(0,s.jsx)(n.p,{children:"Al utilizar docker, tendremos en cuenta m\xfaltiples \xe1reas donde realizar bloques de c\xf3digo o comandos para la configuraci\xf3n de un contenedor. A continuaci\xf3n, se presentan los comandos m\xe1s comunes y \xfatiles para trabajar con Docker."}),"\n",(0,s.jsx)(n.h2,{id:"comandos-b\xe1sicos-de-docker",children:"Comandos b\xe1sicos de Docker"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Comando"}),(0,s.jsx)(n.th,{children:"Descripci\xf3n"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker images"})}),(0,s.jsx)(n.td,{children:"Lista todas las im\xe1genes descargadas."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker pull <nombre-imagen>:<tag>"})}),(0,s.jsx)(n.td,{children:"Descarga una imagen desde un repositorio."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker rmi <nombre-imagen>:<tag>"})}),(0,s.jsx)(n.td,{children:"Elimina una imagen descargada."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker create --name <nombre-contenedor> <nombre-imagen>:<tag>"})}),(0,s.jsx)(n.td,{children:"Crea un contenedor a partir de una imagen."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker start <id>"})}),(0,s.jsx)(n.td,{children:"Inicia un contenedor ya creado."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker run <id>"})}),(0,s.jsx)(n.td,{children:"Crea e inicia un contenedor (equivale a create + start)."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker rm <nombre-contenedor>"})}),(0,s.jsx)(n.td,{children:"Elimina un contenedor."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker stop <id-contenedor>"})}),(0,s.jsx)(n.td,{children:"Detiene un contenedor en ejecuci\xf3n."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker ps -a"})}),(0,s.jsx)(n.td,{children:"Muestra todos los contenedores, incluyendo los detenidos."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker logs --follow <nombre-contenedor>"})}),(0,s.jsx)(n.td,{children:"Muestra los logs del contenedor en tiempo real."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker network ls"})}),(0,s.jsx)(n.td,{children:"Lista las redes configuradas en Docker."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker network create <nombre-red>"})}),(0,s.jsx)(n.td,{children:"Crea una nueva red."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker network rm <nombre-red>"})}),(0,s.jsx)(n.td,{children:"Elimina una red existente."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker build -t <nombre-imagen>:<mi-etiqueta>"})}),(0,s.jsx)(n.td,{children:"Construye una imagen a partir de un Dockerfile."})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"estructura-de-un-dockerfile",children:"Estructura de un Dockerfile"}),"\n",(0,s.jsx)(n.p,{children:"Un Dockerfile es un archivo de texto que contiene una serie de instrucciones para construir una imagen de Docker. A continuaci\xf3n, se presenta la estructura b\xe1sica de un Dockerfile:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Dockerfile\nFROM <nombre-imagen-base>:<tag>  # Imagen base\nMAINTAINER <nombre> <email>  # Informaci\xf3n del mantenedor\nRUN <comando>  # Comando para ejecutar durante la construcci\xf3n de la imagen\nCOPY <origen> <destino>  # Copia archivos al contenedor\nADD <origen> <destino>  # Similar a COPY, pero con m\xe1s funcionalidades\nEXPOSE <puerto>  # Expone un puerto del contenedor\nCMD ["<comando>", "<argumentos>"]  # Comando por defecto al iniciar el contenedor\nENTRYPOINT ["<comando>", "<argumentos>"]  # Comando que se ejecuta al iniciar el contenedor\n'})}),"\n",(0,s.jsx)(n.p,{children:"\xbfQu\xe9 diferencia hay entre el CMD y ENTRYPOINT?\nCMD y ENTRYPOINT son dos instrucciones en un Dockerfile que definen el comando que se ejecutar\xe1 cuando se inicie un contenedor. La principal diferencia es que CMD proporciona valores por defecto que pueden ser sobrescritos al ejecutar el contenedor, mientras que ENTRYPOINT define un comando fijo que siempre se ejecutar\xe1, aunque se puedan a\xf1adir argumentos adicionales."}),"\n",(0,s.jsx)(n.h2,{id:"estructura-de-un-docker-composeyml",children:"Estructura de un docker-compose.yml"}),"\n",(0,s.jsxs)(n.p,{children:["Un archivo ",(0,s.jsx)(n.code,{children:"docker-compose.yml"})," permite definir y ejecutar aplicaciones multi-contenedor. A continuaci\xf3n, se presenta la estructura b\xe1sica de un archivo ",(0,s.jsx)(n.code,{children:"docker-compose.yml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'version: "3.9"\nservices:\n    backendnode:\n        depends_on:\n            - mi_postgres\n        build: .\n        ports: \n            - "3000:3000"\n        links:\n            - mi_postgres\n    mi_postgres:\n        image: postgres:14.18\n        ports:\n            - "5440:5432"\n        environment:\n            - POSTGRES_USER=postgres\n            - POSTGRES_PASSWORD=postgres\n            - POSTGRES_DB=test_docker\n        volumes:\n            - mi_postgres_data:/var/lib/postgresql/data\n\nvolumes:\n    mi_postgres_data:\n'})}),"\n",(0,s.jsxs)(n.p,{children:["En este ejemplo de archivo ",(0,s.jsx)(n.code,{children:"docker-compose.yml"}),", se definen dos servicios: ",(0,s.jsx)(n.code,{children:"backendnode"})," y ",(0,s.jsx)(n.code,{children:"mi_postgres"}),"."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"backendnode"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Depende del servicio ",(0,s.jsx)(n.code,{children:"mi_postgres"})," para garantizar que este \xfaltimo se inicie primero."]}),"\n",(0,s.jsxs)(n.li,{children:["Construye su imagen desde el contexto actual (",(0,s.jsx)(n.code,{children:"build: ."}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["Expone el puerto ",(0,s.jsx)(n.code,{children:"3000"})," del contenedor al puerto ",(0,s.jsx)(n.code,{children:"3000"})," del host."]}),"\n",(0,s.jsxs)(n.li,{children:["Utiliza ",(0,s.jsx)(n.code,{children:"links"})," para conectarse al servicio ",(0,s.jsx)(n.code,{children:"mi_postgres"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"mi_postgres"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Utiliza la imagen oficial de PostgreSQL en su versi\xf3n ",(0,s.jsx)(n.code,{children:"14.18"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Expone el puerto ",(0,s.jsx)(n.code,{children:"5432"})," del contenedor al puerto ",(0,s.jsx)(n.code,{children:"5440"})," del host."]}),"\n",(0,s.jsx)(n.li,{children:"Configura variables de entorno para el usuario, contrase\xf1a y base de datos predeterminada."}),"\n",(0,s.jsxs)(n.li,{children:["Monta un volumen llamado ",(0,s.jsx)(n.code,{children:"mi_postgres_data"})," para persistir los datos de la base de datos."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"volumes"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Se define un volumen llamado ",(0,s.jsx)(n.code,{children:"mi_postgres_data"})," para almacenar los datos de PostgreSQL de manera persistente."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"comandos-para-trabajar-con-docker-compose",children:"Comandos para trabajar con Docker Compose"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Comando"}),(0,s.jsx)(n.th,{children:"Descripci\xf3n"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker-compose up"})}),(0,s.jsxs)(n.td,{children:["Inicia los servicios definidos en el archivo ",(0,s.jsx)(n.code,{children:"docker-compose.yml"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker-compose down"})}),(0,s.jsxs)(n.td,{children:["Detiene y elimina los contenedores, redes y vol\xfamenes creados por ",(0,s.jsx)(n.code,{children:"up"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker-compose build"})}),(0,s.jsxs)(n.td,{children:["Construye las im\xe1genes de los servicios definidos en el archivo ",(0,s.jsx)(n.code,{children:"docker-compose.yml"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker-compose logs"})}),(0,s.jsx)(n.td,{children:"Muestra los logs de todos los servicios."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker-compose exec <servicio> <comando>"})}),(0,s.jsx)(n.td,{children:"Ejecuta un comando en un contenedor en ejecuci\xf3n de un servicio espec\xedfico."})]})]})]})]})}function u(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>i});var o=r(6540);const s={},d=o.createContext(s);function c(e){const n=o.useContext(d);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(d.Provider,{value:n},e.children)}}}]);
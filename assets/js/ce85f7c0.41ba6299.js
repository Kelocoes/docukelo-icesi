"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7346],{1898:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>d,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"computacion-2/semana-6/jpa","title":"Ejercicios de JPA con Query Methods","description":"Introducci\xf3n breve y referencias","source":"@site/docs/computacion-2/semana-6/jpa.md","sourceDirName":"computacion-2/semana-6","slug":"/computacion-2/semana-6/jpa","permalink":"/docs/computacion-2/semana-6/jpa","draft":false,"unlisted":false,"editUrl":"https://github.com/Kelocoes/docukelo-icesi/tree/main/docs/computacion-2/semana-6/jpa.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"S6 - JPA","permalink":"/docs/category/s6---jpa"},"next":{"title":"S7 - Tests","permalink":"/docs/category/s7---tests"}}');var r=s(4848),a=s(8453);const d={sidebar_position:1},c="Ejercicios de JPA con Query Methods",l={},t=[{value:"Especificaci\xf3n de los modelos",id:"especificaci\xf3n-de-los-modelos",level:2},{value:"Especificaci\xf3n del modelo a revisar",id:"especificaci\xf3n-del-modelo-a-revisar",level:2},{value:"Ejercicios de QueryMethods usando JpaRepository",id:"ejercicios-de-querymethods-usando-jparepository",level:2},{value:"<code>findByUsername</code>",id:"findbyusername",level:3},{value:"<code>findByEmailIgnoreCase</code>",id:"findbyemailignorecase",level:3},{value:"<code>findByFirstNameAndLastName</code>",id:"findbyfirstnameandlastname",level:3},{value:"<code>findByAgeGreaterThan</code>",id:"findbyagegreaterthan",level:3},{value:"<code>findByAgeGreaterThanEqual</code>",id:"findbyagegreaterthanequal",level:3},{value:"<code>findByGpaBetween</code>",id:"findbygpabetween",level:3},{value:"<code>findByActiveTrue</code>",id:"findbyactivetrue",level:3},{value:"<code>findByActiveFalse</code>",id:"findbyactivefalse",level:3},{value:"<code>findByRegistrationDateAfter</code>",id:"findbyregistrationdateafter",level:3},{value:"<code>findByRegistrationDateBetween</code>",id:"findbyregistrationdatebetween",level:3},{value:"<code>findByCoursesCode</code>",id:"findbycoursescode",level:3},{value:"<code>findByCoursesTitleContainingIgnoreCase</code>",id:"findbycoursestitlecontainingignorecase",level:3},{value:"<code>findDistinctByCoursesCode</code>",id:"finddistinctbycoursescode",level:3},{value:"<code>findByAdvisorLastName</code>",id:"findbyadvisorlastname",level:3},{value:"<code>findByAdvisorId</code>",id:"findbyadvisorid",level:3},{value:"<code>findByAdvisorIsNull</code>",id:"findbyadvisorisnull",level:3},{value:"<code>existsByEmail</code>",id:"existsbyemail",level:3},{value:"<code>countByActiveTrue</code>",id:"countbyactivetrue",level:3},{value:"<code>deleteByUsername</code>",id:"deletebyusername",level:3},{value:"<code>findTop5ByOrderByGpaDesc</code>",id:"findtop5byorderbygpadesc",level:3},{value:"<code>findFirstByOrderByRegistrationDateAsc</code>",id:"findfirstbyorderbyregistrationdateasc",level:3},{value:"<code>findByFirstNameStartingWith</code>",id:"findbyfirstnamestartingwith",level:3},{value:"<code>findByLastNameEndingWith</code>",id:"findbylastnameendingwith",level:3},{value:"<code>findByFirstNameContaining</code>",id:"findbyfirstnamecontaining",level:3},{value:"<code>findByEmailLike</code>",id:"findbyemaillike",level:3},{value:"<code>findByGpaIsNull</code>",id:"findbygpaisnull",level:3},{value:"<code>findByGpaIsNotNull</code>",id:"findbygpaisnotnull",level:3},{value:"<code>findByUsernameIn</code>",id:"findbyusernamein",level:3},{value:"<code>findByUsernameNotIn</code>",id:"findbyusernamenotin",level:3},{value:"<code>findByUsernameNot</code>",id:"findbyusernamenot",level:3},{value:"<code>findByDepartmentName (CourseRepository)</code>",id:"findbydepartmentname-courserepository",level:3},{value:"<code>findByCreditsLessThan (CourseRepository)</code>",id:"findbycreditslessthan-courserepository",level:3},{value:"<code>findByLevelIn (CourseRepository)</code>",id:"findbylevelin-courserepository",level:3},{value:"<code>findByEnrollmentsGradeGreaterThan</code>",id:"findbyenrollmentsgradegreaterthan",level:3},{value:"<code>findByEnrollmentsStatus</code>",id:"findbyenrollmentsstatus",level:3},{value:"<code>findByEnrollmentsSemesterAndCourseCode</code>",id:"findbyenrollmentssemesterandcoursecode",level:3},{value:"<code>findByCoursesLevelAndCreditsGreaterThan</code>",id:"findbycourseslevelandcreditsgreaterthan",level:3},{value:"<code>findByActiveTrue (paginated)</code>",id:"findbyactivetrue-paginated",level:3},{value:"<code>findByCoursesStartDateBefore</code>",id:"findbycoursesstartdatebefore",level:3},{value:"<code>findByFirstNameIgnoreCaseAndLastNameIgnoreCase</code>",id:"findbyfirstnameignorecaseandlastnameignorecase",level:3},{value:"<code>findDistinctByFirstNameAndLastName</code>",id:"finddistinctbyfirstnameandlastname",level:3},{value:"<code>findByEmailEndingWith</code>",id:"findbyemailendingwith",level:3},{value:"<code>findByFirstNameOrderByLastNameAsc</code>",id:"findbyfirstnameorderbylastnameasc",level:3},{value:"<code>findByLastNameOrderByFirstNameDesc</code>",id:"findbylastnameorderbyfirstnamedesc",level:3},{value:"<code>findByCoursesCodeOrderByCreditsDesc</code>",id:"findbycoursescodeorderbycreditsdesc",level:3},{value:"<code>streamByActiveTrue</code>",id:"streambyactivetrue",level:3},{value:"<code>findTopByOrderByGpaAsc</code>",id:"findtopbyorderbygpaasc",level:3},{value:"<code>findByRegistrationDateYear (ejemplo con Between)</code>",id:"findbyregistrationdateyear-ejemplo-con-between",level:3},{value:"<code>findByFirstNameNot</code>",id:"findbyfirstnamenot",level:3},{value:"<code>findByEmailContainingIgnoreCaseAndActiveTrue</code>",id:"findbyemailcontainingignorecaseandactivetrue",level:3},{value:"<code>findDistinctByCoursesDepartmentName</code>",id:"finddistinctbycoursesdepartmentname",level:3},{value:"<code>findByEnrollmentsCourseCodeAndEnrollmentsStatus</code>",id:"findbyenrollmentscoursecodeandenrollmentsstatus",level:3},{value:"<code>existsByUsername</code>",id:"existsbyusername",level:3},{value:"<code>deleteAllByActiveFalse</code>",id:"deleteallbyactivefalse",level:3},{value:"<code>findByFirstNameOrLastName</code>",id:"findbyfirstnameorlastname",level:3},{value:"<code>findByFirstNameNotContaining</code>",id:"findbyfirstnamenotcontaining",level:3},{value:"Notas finales",id:"notas-finales",level:2}];function o(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"ejercicios-de-jpa-con-query-methods",children:"Ejercicios de JPA con Query Methods"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Introducci\xf3n breve y referencias"})}),"\n",(0,r.jsxs)(n.p,{children:["En este post encontrar\xe1s 50 ejercicios que muestran distintas funcionalidades de los ",(0,r.jsx)(n.em,{children:"Query Methods"})," con Spring Data JPA (m\xe9todos derivados por nombre) usando ",(0,r.jsx)(n.code,{children:"JpaRepository"}),".",(0,r.jsx)(n.br,{}),"\n","Para la referencia oficial sobre la creaci\xf3n de queries a partir de nombres de m\xe9todos y la lista de palabras clave soportadas por Spring Data JPA, consulta la ",(0,r.jsx)(n.a,{href:"https://docs.spring.io/spring-data/jpa/reference/jpa/query-methods.html",children:"documentaci\xf3n oficial de Spring Data JPA"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Fuentes recomendadas:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://docs.spring.io/spring-data/jpa/reference/jpa.html",children:"Spring Data JPA \u2014 JPA Query Methods (reference)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.a,{href:"https://docs.spring.io/spring-data/jpa/reference/jpa/query-methods.html",children:["Spring Data JPA \u2014 Repository query keywords (lista de ",(0,r.jsx)(n.em,{children:"keywords"})," soportadas)"]})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.baeldung.com/spring-data-derived-queries",children:"Baeldung \u2014 Spring Data JPA Query Methods"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"especificaci\xf3n-de-los-modelos",children:"Especificaci\xf3n de los modelos"}),"\n",(0,r.jsxs)(n.p,{children:["A continuaci\xf3n se definen las entidades que se usar\xe1n como referencia en los ejercicios. Puedes copiarlas directamente en tu proyecto Spring Boot y rellenar sus m\xe9todos faltantes usando ",(0,r.jsx)(n.code,{children:"Lombok"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"especificaci\xf3n-del-modelo-a-revisar",children:"Especificaci\xf3n del modelo a revisar"}),"\n",(0,r.jsx)(n.p,{children:"A continuaci\xf3n se definen las entidades Java (anotaciones JPA) que usaremos como referencia en los ejercicios."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'package com.example.demo.model;\n\nimport jakarta.persistence.*;\nimport java.sql.Timestamp;\nimport java.util.*;\n\n@Entity\n@Table(name = "departments")\npublic class Department {\n    @Id @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n    private String name;\n    // getters / setters\n}\n\n@Entity\n@Table(name = "instructors")\npublic class Instructor {\n    @Id @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n    private String firstName;\n    private String lastName;\n    private Timestamp hireDate;\n    private boolean active;\n\n    @ManyToOne\n    private Department department;\n    // getters / setters\n}\n\n@Entity\n@Table(name = "courses")\npublic class Course {\n    @Id @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n    private String code; // e.g. CS101\n    private String title;\n    private int credits;\n    private Timestamp startDate;\n    private boolean active;\n\n    @Enumerated(EnumType.STRING)\n    private Level level; // BEGINNER / INTERMEDIATE / ADVANCED\n\n    @ManyToOne\n    private Department department;\n\n    @ManyToMany(mappedBy = "courses")\n    private Set<Student> students = new HashSet<>();\n    // getters / setters\n}\n\n@Entity\n@Table(name = "students")\npublic class Student {\n    @Id @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    private String username;\n    private String email;\n    private String firstName;\n    private String lastName;\n    private Integer age;\n    private Double gpa;\n    private boolean active;\n    private Timestamp registrationDate;\n\n    private String city;\n    private String state;\n\n    @ManyToMany\n    @JoinTable(name = "student_course",\n        joinColumns = @JoinColumn(name = "student_id"),\n        inverseJoinColumns = @JoinColumn(name = "course_id"))\n    private Set<Course> courses = new HashSet<>();\n\n    @ManyToOne\n    private Instructor advisor;\n\n    @OneToMany(mappedBy = "student")\n    private List<Enrollment> enrollments = new ArrayList<>();\n    // getters / setters\n}\n\n@Entity\n@Table(name = "enrollments")\npublic class Enrollment {\n    @Id @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @ManyToOne\n    private Student student;\n\n    @ManyToOne\n    private Course course;\n\n    @Enumerated(EnumType.STRING)\n    private Semester semester; // SPRING, FALL, etc.\n\n    private Double grade;\n\n    @Enumerated(EnumType.STRING)\n    private EnrollmentStatus status; // ENROLLED, DROPPED, COMPLETED\n    // getters / setters\n}\n\npublic enum Level {\n    BEGINNER, INTERMEDIATE, ADVANCED\n}\n\npublic enum Semester {\n    SPRING, SUMMER, FALL, WINTER\n}\n\npublic enum EnrollmentStatus {\n    ENROLLED, DROPPED, COMPLETED\n}\n'})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Nota"}),": las entidades previas muestran los campos y relaciones b\xe1sicos."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"ejercicios-de-querymethods-usando-jparepository",children:"Ejercicios de QueryMethods usando JpaRepository"}),"\n",(0,r.jsxs)(n.p,{children:["A continuaci\xf3n vienen algunos ejercicios para practicar la creaci\xf3n de ",(0,r.jsx)(n.em,{children:"query methods"})," usando ",(0,r.jsx)(n.code,{children:"JpaRepository"}),". Cada ejercicio incluye:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Un subt\xedtulo con el nombre del ",(0,r.jsx)(n.em,{children:"query method"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Una descripci\xf3n de lo que se pide."}),"\n",(0,r.jsxs)(n.li,{children:["Una secci\xf3n ",(0,r.jsx)(n.code,{children:"<details>"})," con la soluci\xf3n esperada: la firma del m\xe9todo en el ",(0,r.jsx)(n.code,{children:"Repository"})," y un ejemplo de uso (servicio o test)."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"findbyusername",children:(0,r.jsx)(n.code,{children:"findByUsername"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra todos los estudiantes cuyo ",(0,r.jsx)(n.code,{children:"username"})," sea igual a un string dado."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"public interface StudentRepository extends JpaRepository<Student, Long> {\n    List<Student> findByUsername(String username);\n}\n"})}),(0,r.jsx)(n.p,{children:"Ejemplo de uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"@Autowired\nprivate StudentRepository repo;\n\npublic List<Student> findStudentsByUsername(String username) {\n    return repo.findByUsername(username);\n}\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyemailignorecase",children:(0,r.jsx)(n.code,{children:"findByEmailIgnoreCase"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Busca estudiantes por email, ignorando may\xfasculas/min\xfasculas."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByEmailIgnoreCase(String email);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'List<Student> s = repo.findByEmailIgnoreCase("ALICE@EXAMPLE.COM");\n// Encuentra registros aunque el email est\xe9 en distinta capitalizaci\xf3n.\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyfirstnameandlastname",children:(0,r.jsx)(n.code,{children:"findByFirstNameAndLastName"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Busca estudiantes por ",(0,r.jsx)(n.code,{children:"firstName"})," y ",(0,r.jsx)(n.code,{children:"lastName"}),"."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByFirstNameAndLastName(String firstName, String lastName);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'repo.findByFirstNameAndLastName("Alice", "Lopez");\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyagegreaterthan",children:(0,r.jsx)(n.code,{children:"findByAgeGreaterThan"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes con ",(0,r.jsx)(n.code,{children:"age"})," mayor a un valor."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByAgeGreaterThan(Integer age);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"repo.findByAgeGreaterThan(21);\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyagegreaterthanequal",children:(0,r.jsx)(n.code,{children:"findByAgeGreaterThanEqual"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes con ",(0,r.jsx)(n.code,{children:"age"})," mayor o igual a un valor."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByAgeGreaterThanEqual(Integer age);\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbygpabetween",children:(0,r.jsx)(n.code,{children:"findByGpaBetween"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes con ",(0,r.jsx)(n.code,{children:"gpa"})," dentro de un rango (inclusive)."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByGpaBetween(Double min, Double max);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"repo.findByGpaBetween(3.0, 4.0);\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyactivetrue",children:(0,r.jsx)(n.code,{children:"findByActiveTrue"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes activos (campo boolean ",(0,r.jsx)(n.code,{children:"active"})," = true)."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByActiveTrue();\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"repo.findByActiveTrue();\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyactivefalse",children:(0,r.jsx)(n.code,{children:"findByActiveFalse"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes inactivos (campo boolean ",(0,r.jsx)(n.code,{children:"active"})," = false)."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByActiveFalse();\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyregistrationdateafter",children:(0,r.jsx)(n.code,{children:"findByRegistrationDateAfter"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes que se registraron despu\xe9s de una fecha dada."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByRegistrationDateAfter(Timestamp date);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"repo.findByRegistrationDateAfter(Timestamp.valueOf(LocalDateTime.of(2024, 1, 1, 0, 0)));\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyregistrationdatebetween",children:(0,r.jsx)(n.code,{children:"findByRegistrationDateBetween"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes registrados entre dos fechas."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByRegistrationDateBetween(Timestamp from, Timestamp to);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"repo.findByRegistrationDateBetween(Timestamp.valueOf(LocalDateTime.of(2024,1,1,0,0)), Timestamp.valueOf(LocalDateTime.of(2024,12,31,23,59)));\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbycoursescode",children:(0,r.jsx)(n.code,{children:"findByCoursesCode"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes que est\xe9n inscritos en un curso con un c\xf3digo dado (join implicito con collection ",(0,r.jsx)(n.code,{children:"courses"}),")."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByCoursesCode(String code);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'repo.findByCoursesCode("CS101");\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbycoursestitlecontainingignorecase",children:(0,r.jsx)(n.code,{children:"findByCoursesTitleContainingIgnoreCase"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Busca estudiantes que tengan cursos cuyo t\xedtulo contenga una subcadena (case-insensitive)."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByCoursesTitleContainingIgnoreCase(String titlePart);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'repo.findByCoursesTitleContainingIgnoreCase("data");\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"finddistinctbycoursescode",children:(0,r.jsx)(n.code,{children:"findDistinctByCoursesCode"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes distintos (sin duplicados) inscritos en el curso ",(0,r.jsx)(n.code,{children:"code"}),"."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findDistinctByCoursesCode(String code);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'repo.findDistinctByCoursesCode("CS101");\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyadvisorlastname",children:(0,r.jsx)(n.code,{children:"findByAdvisorLastName"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes cuyo advisor (ManyToOne Instructor) tiene un apellido dado."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByAdvisorLastName(String lastName);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'repo.findByAdvisorLastName("Gonzalez");\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyadvisorid",children:(0,r.jsx)(n.code,{children:"findByAdvisorId"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes por el id del advisor."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByAdvisorId(Long instructorId);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"repo.findByAdvisorId(42L);\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyadvisorisnull",children:(0,r.jsx)(n.code,{children:"findByAdvisorIsNull"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes que no tienen advisor asignado."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByAdvisorIsNull();\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"repo.findByAdvisorIsNull();\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"existsbyemail",children:(0,r.jsx)(n.code,{children:"existsByEmail"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Comprueba si existe un estudiante con un ",(0,r.jsx)(n.code,{children:"email"})," dado."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"boolean existsByEmail(String email);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'boolean exists = repo.existsByEmail("alice@example.com");\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"countbyactivetrue",children:(0,r.jsx)(n.code,{children:"countByActiveTrue"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Cuenta cuantos estudiantes est\xe1n activos."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"long countByActiveTrue();\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"long activeStudents = repo.countByActiveTrue();\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"deletebyusername",children:(0,r.jsx)(n.code,{children:"deleteByUsername"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Borra estudiantes por ",(0,r.jsx)(n.code,{children:"username"})," (m\xe9todo reservado: delete...)."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"void deleteByUsername(String username);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'repo.deleteByUsername("old_user");\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"findtop5byorderbygpadesc",children:(0,r.jsx)(n.code,{children:"findTop5ByOrderByGpaDesc"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Devuelve los 5 estudiantes con mayor GPA (Top / OrderBy)."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findTop5ByOrderByGpaDesc();\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> top5 = repo.findTop5ByOrderByGpaDesc();\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findfirstbyorderbyregistrationdateasc",children:(0,r.jsx)(n.code,{children:"findFirstByOrderByRegistrationDateAsc"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra el primer estudiante (el m\xe1s antiguo) por fecha de registro."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"Optional<Student> findFirstByOrderByRegistrationDateAsc();\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"Optional<Student> first = repo.findFirstByOrderByRegistrationDateAsc();\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyfirstnamestartingwith",children:(0,r.jsx)(n.code,{children:"findByFirstNameStartingWith"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Busca estudiantes cuyo ",(0,r.jsx)(n.code,{children:"firstName"})," empieza con un prefijo."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByFirstNameStartingWith(String prefix);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'repo.findByFirstNameStartingWith("Al");\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbylastnameendingwith",children:(0,r.jsx)(n.code,{children:"findByLastNameEndingWith"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Busca estudiantes cuyo ",(0,r.jsx)(n.code,{children:"lastName"})," termina con un sufijo."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByLastNameEndingWith(String suffix);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'repo.findByLastNameEndingWith("ez");\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyfirstnamecontaining",children:(0,r.jsx)(n.code,{children:"findByFirstNameContaining"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Busca estudiantes cuyo ",(0,r.jsx)(n.code,{children:"firstName"})," contiene una subcadena."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByFirstNameContaining(String fragment);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'repo.findByFirstNameContaining("li");\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyemaillike",children:(0,r.jsx)(n.code,{children:"findByEmailLike"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Busca estudiantes con ",(0,r.jsx)(n.code,{children:"email"})," usando LIKE (usa % para comodines)."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByEmailLike(String pattern);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'repo.findByEmailLike("%example.com");\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbygpaisnull",children:(0,r.jsx)(n.code,{children:"findByGpaIsNull"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes cuyo ",(0,r.jsx)(n.code,{children:"gpa"})," es NULL."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByGpaIsNull();\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbygpaisnotnull",children:(0,r.jsx)(n.code,{children:"findByGpaIsNotNull"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes cuyo ",(0,r.jsx)(n.code,{children:"gpa"})," no es NULL."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByGpaIsNotNull();\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyusernamein",children:(0,r.jsx)(n.code,{children:"findByUsernameIn"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes cuyo ",(0,r.jsx)(n.code,{children:"username"})," est\xe1 en una colecci\xf3n dada (IN)."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByUsernameIn(Collection<String> usernames);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'repo.findByUsernameIn(List.of("a","b","c"));\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyusernamenotin",children:(0,r.jsx)(n.code,{children:"findByUsernameNotIn"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes cuyo ",(0,r.jsx)(n.code,{children:"username"})," NO est\xe1 en una colecci\xf3n dada (NOT IN)."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByUsernameNotIn(Collection<String> usernames);\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyusernamenot",children:(0,r.jsx)(n.code,{children:"findByUsernameNot"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes cuyo ",(0,r.jsx)(n.code,{children:"username"})," NO sea el dado (NOT)."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByUsernameNot(String username);\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbydepartmentname-courserepository",children:(0,r.jsx)(n.code,{children:"findByDepartmentName (CourseRepository)"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," En CourseRepository: busca cursos por el nombre del department asociado."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"public interface CourseRepository extends JpaRepository<Course, Long> {\n    List<Course> findByDepartmentName(String deptName);\n}\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'courseRepo.findByDepartmentName("Computer Science");\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbycreditslessthan-courserepository",children:(0,r.jsx)(n.code,{children:"findByCreditsLessThan (CourseRepository)"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra cursos con menos de N cr\xe9ditos."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Course> findByCreditsLessThan(int credits);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"courseRepo.findByCreditsLessThan(4);\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbylevelin-courserepository",children:(0,r.jsx)(n.code,{children:"findByLevelIn (CourseRepository)"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra cursos cuyo ",(0,r.jsx)(n.code,{children:"level"})," est\xe1 dentro de una colecci\xf3n de niveles."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Course> findByLevelIn(Collection<Level> levels);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"courseRepo.findByLevelIn(List.of(Level.BEGINNER, Level.INTERMEDIATE));\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyenrollmentsgradegreaterthan",children:(0,r.jsx)(n.code,{children:"findByEnrollmentsGradeGreaterThan"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes que tengan alguna inscripci\xf3n (",(0,r.jsx)(n.code,{children:"enrollments"}),") con nota mayor a X."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByEnrollmentsGradeGreaterThan(Double grade);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"repo.findByEnrollmentsGradeGreaterThan(85.0);\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyenrollmentsstatus",children:(0,r.jsx)(n.code,{children:"findByEnrollmentsStatus"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes seg\xfan el estado de alguna de sus inscripciones."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByEnrollmentsStatus(EnrollmentStatus status);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"repo.findByEnrollmentsStatus(EnrollmentStatus.COMPLETED);\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyenrollmentssemesterandcoursecode",children:(0,r.jsx)(n.code,{children:"findByEnrollmentsSemesterAndCourseCode"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes inscritos en un curso espec\xedfico durante un semestre concreto."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByEnrollmentsSemesterAndEnrollmentsCourseCode(Semester semester, String courseCode);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'repo.findByEnrollmentsSemesterAndEnrollmentsCourseCode(Semester.FALL, "CS101");\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbycourseslevelandcreditsgreaterthan",children:(0,r.jsx)(n.code,{children:"findByCoursesLevelAndCreditsGreaterThan"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes que tienen al menos un curso con un ",(0,r.jsx)(n.code,{children:"level"})," y m\xe1s de N cr\xe9ditos."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByCoursesLevelAndCoursesCreditsGreaterThan(Level level, int credits);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"repo.findByCoursesLevelAndCoursesCreditsGreaterThan(Level.ADVANCED, 3);\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyactivetrue-paginated",children:(0,r.jsx)(n.code,{children:"findByActiveTrue (paginated)"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Paginaci\xf3n: devuelve estudiantes activos con ",(0,r.jsx)(n.code,{children:"Pageable"}),"."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"Page<Student> findByActiveTrue(Pageable pageable);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'Page<Student> page = repo.findByActiveTrue(PageRequest.of(0, 20, Sort.by("gpa").descending()));\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbycoursesstartdatebefore",children:(0,r.jsx)(n.code,{children:"findByCoursesStartDateBefore"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes que tienen cursos cuyo ",(0,r.jsx)(n.code,{children:"startDate"})," es anterior a una fecha."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByCoursesStartDateBefore(Timestamp date);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"repo.findByCoursesStartDateBefore(Timestamp.valueOf(LocalDateTime.now()));\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyfirstnameignorecaseandlastnameignorecase",children:(0,r.jsx)(n.code,{children:"findByFirstNameIgnoreCaseAndLastNameIgnoreCase"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Busca comparando ",(0,r.jsx)(n.code,{children:"firstName"})," y ",(0,r.jsx)(n.code,{children:"lastName"})," ignorando may\xfasculas/min\xfasculas."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByFirstNameIgnoreCaseAndLastNameIgnoreCase(String first, String last);\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"finddistinctbyfirstnameandlastname",children:(0,r.jsx)(n.code,{children:"findDistinctByFirstNameAndLastName"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Devuelve resultados distintos al filtrar por nombre y apellido."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findDistinctByFirstNameAndLastName(String first, String last);\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyemailendingwith",children:(0,r.jsx)(n.code,{children:"findByEmailEndingWith"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Busca estudiantes cuyo email termina con una cadena dada."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'List<Student> findByEmailEndingWith(String suffix);\n// Ej: findByEmailEndingWith("@gmail.com")\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyfirstnameorderbylastnameasc",children:(0,r.jsx)(n.code,{children:"findByFirstNameOrderByLastNameAsc"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Ordena: devuelve estudiantes con un ",(0,r.jsx)(n.code,{children:"firstName"})," dado ordenados por ",(0,r.jsx)(n.code,{children:"lastName"})," ascendente."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByFirstNameOrderByLastNameAsc(String firstName);\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbylastnameorderbyfirstnamedesc",children:(0,r.jsx)(n.code,{children:"findByLastNameOrderByFirstNameDesc"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Ordena por ",(0,r.jsx)(n.code,{children:"firstName"})," descendente."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByLastNameOrderByFirstNameDesc(String lastName);\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbycoursescodeorderbycreditsdesc",children:(0,r.jsx)(n.code,{children:"findByCoursesCodeOrderByCreditsDesc"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Busca estudiantes por c\xf3digo de curso y ordena por cr\xe9ditos (desc)."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByCoursesCodeOrderByCoursesCreditsDesc(String courseCode);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'repo.findByCoursesCodeOrderByCoursesCreditsDesc("CS101");\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"streambyactivetrue",children:(0,r.jsx)(n.code,{children:"streamByActiveTrue"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Devuelve un ",(0,r.jsx)(n.code,{children:"Stream"})," de estudiantes activos (\xfatil para procesar grandes resultados)."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"Stream<Student> streamByActiveTrue();\n"})}),(0,r.jsx)(n.p,{children:"Uso (recordar cerrar el stream si es necesario):"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"try (Stream<Student> s = repo.streamByActiveTrue()) {\n    s.forEach(...);\n}\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findtopbyorderbygpaasc",children:(0,r.jsx)(n.code,{children:"findTopByOrderByGpaAsc"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Devuelve el estudiante con menor GPA."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"Optional<Student> findTopByOrderByGpaAsc();\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"Optional<Student> worst = repo.findTopByOrderByGpaAsc();\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyregistrationdateyear-ejemplo-con-between",children:(0,r.jsx)(n.code,{children:"findByRegistrationDateYear (ejemplo con Between)"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Busca estudiantes registrados en un a\xf1o determinado usando Between en fechas."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByRegistrationDateBetween(Timestamp startOfYear, Timestamp endOfYear);\n// Ejemplo de llamada:\n// repo.findByRegistrationDateBetween(Timestamp.valueOf(LocalDateTime.of(2024,1,1,0,0)), Timestamp.valueOf(LocalDateTime.of(2024,12,31,23,59)));\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyfirstnamenot",children:(0,r.jsx)(n.code,{children:"findByFirstNameNot"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes cuyo ",(0,r.jsx)(n.code,{children:"firstName"})," no sea el dado."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByFirstNameNot(String name);\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyemailcontainingignorecaseandactivetrue",children:(0,r.jsx)(n.code,{children:"findByEmailContainingIgnoreCaseAndActiveTrue"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Combinaci\xf3n compleja: email contiene X (ignoring case) y active = true."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByEmailContainingIgnoreCaseAndActiveTrue(String fragment);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'repo.findByEmailContainingIgnoreCaseAndActiveTrue("example");\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"finddistinctbycoursesdepartmentname",children:(0,r.jsx)(n.code,{children:"findDistinctByCoursesDepartmentName"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Devuelve estudiantes distintos que est\xe9n en cursos de un depto con nombre dado."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findDistinctByCoursesDepartmentName(String deptName);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'repo.findDistinctByCoursesDepartmentName("Mathematics");\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyenrollmentscoursecodeandenrollmentsstatus",children:(0,r.jsx)(n.code,{children:"findByEnrollmentsCourseCodeAndEnrollmentsStatus"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes por c\xf3digo de curso y estado de la inscripci\xf3n."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByEnrollmentsCourseCodeAndEnrollmentsStatus(String courseCode, EnrollmentStatus status);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'repo.findByEnrollmentsCourseCodeAndEnrollmentsStatus("CS101", EnrollmentStatus.ENROLLED);\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"existsbyusername",children:(0,r.jsx)(n.code,{children:"existsByUsername"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Comprueba existencia por ",(0,r.jsx)(n.code,{children:"username"}),"."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"boolean existsByUsername(String username);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'boolean e = repo.existsByUsername("kevin");\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"deleteallbyactivefalse",children:(0,r.jsx)(n.code,{children:"deleteAllByActiveFalse"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Borra todos los estudiantes inactivos (m\xe9todo reservado deleteAllBy...)."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"void deleteAllByActiveFalse();\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"repo.deleteAllByActiveFalse();\n"})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyfirstnameorlastname",children:(0,r.jsx)(n.code,{children:"findByFirstNameOrLastName"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Busca estudiantes cuyo ",(0,r.jsx)(n.code,{children:"firstName"})," O ",(0,r.jsx)(n.code,{children:"lastName"})," coincida con los par\xe1metros."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByFirstNameOrLastName(String first, String last);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'repo.findByFirstNameOrLastName("Carlos","Gomez");\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"findbyfirstnamenotcontaining",children:(0,r.jsx)(n.code,{children:"findByFirstNameNotContaining"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Qu\xe9 se requiere:"})," Encuentra estudiantes cuyo ",(0,r.jsx)(n.code,{children:"firstName"})," NO contenga una subcadena."]}),"\n",(0,r.jsxs)(s,{children:[(0,r.jsx)("summary",{children:"Soluci\xf3n esperada"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"List<Student> findByFirstNameNotContaining(String fragment);\n"})}),(0,r.jsx)(n.p,{children:"Uso:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'repo.findByFirstNameNotContaining("test");\n'})})]}),"\n",(0,r.jsx)(n.h2,{id:"notas-finales",children:"Notas finales"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Muchas de las palabras clave soportadas por Spring Data JPA (por ejemplo ",(0,r.jsx)(n.code,{children:"And"}),", ",(0,r.jsx)(n.code,{children:"Or"}),", ",(0,r.jsx)(n.code,{children:"Between"}),", ",(0,r.jsx)(n.code,{children:"LessThan"}),", ",(0,r.jsx)(n.code,{children:"GreaterThan"}),", ",(0,r.jsx)(n.code,{children:"Like"}),", ",(0,r.jsx)(n.code,{children:"OrderBy"}),", ",(0,r.jsx)(n.code,{children:"Distinct"}),", ",(0,r.jsx)(n.code,{children:"Top"}),", ",(0,r.jsx)(n.code,{children:"First"}),", ",(0,r.jsx)(n.code,{children:"IgnoreCase"}),", ",(0,r.jsx)(n.code,{children:"IsNull"}),", ",(0,r.jsx)(n.code,{children:"IsNotNull"}),", etc.) permiten expresar condiciones potentes sin necesidad de escribir JPQL expl\xedcito."]}),"\n",(0,r.jsxs)(n.li,{children:["Cuando la expresi\xf3n derivada se vuelva muy compleja (muchos joins, subselects, condiciones din\xe1micas), considera usar ",(0,r.jsx)(n.code,{children:"@Query"})," con JPQL/SQL, QueryDSL o Specification/Criteria API."]}),"\n",(0,r.jsxs)(n.li,{children:["Para opciones de paginaci\xf3n y ordenamiento es preferible usar ",(0,r.jsx)(n.code,{children:"Pageable"})," y ",(0,r.jsx)(n.code,{children:"Sort"})," desde los par\xe1metros de m\xe9todo en lugar de crear m\xe9todos con ",(0,r.jsx)(n.code,{children:"OrderBy"})," muy largos."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>c});var i=s(6540);const r={},a=i.createContext(r);function d(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);